#View(cw1)
fb1cw <- merge(fb1, cw1[, c("row", "Average.cob.weight")], by="row", all.x=TRUE)
#View(fb1cw)
# Quality checking
# how many of the non-check plots have no data
nonch <- subset(fb1cw, !(Genotype %in% "Check"))
sum(is.na(nonch$Average.cob.weight))
nonch_data <- subset(nonch, !is.na(Average.cob.weight))
t.test(subset(fb1cw, quadrant %in% "1")$Average.cob.weight, subset(fb1cw, quadrant %in% "2")$Average.cob.weight, na.rm=TRUE)
t.test(subset(fb1cw, quadrant %in% "3")$Average.cob.weight, subset(fb1cw, quadrant %in% "4")$Average.cob.weight, na.rm=TRUE)
write.table(fb1cw[, -16], "../cache/pheno2019_cob_weight.csv", sep=",", row.names = FALSE, quote=FALSE)
write.table(subset(fb1cw[, -16], nitrogen %in% "+N"), "cache/pheno2019_cob_weight_withN.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2019_cob_weight.xlsx")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir=normalizePath('../../'))
#install.packages("readxl")
library(tidyverse)
library(readxl)
ph_2018 <- read.csv("../data/copy of organized phenotyping data for heritability copy2.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
#install.packages("readxl")
library(tidyverse)
library(readxl)
ph_2018 <- read.csv("../data/copy of organized phenotyping data for heritability copy2.csv")
#install.packages("readxl")
library(tidyverse)
library(readxl)
ph_2018 <- read.csv("../data/phenotyping_2019_semra_coblength_raw.csv")
#View(ph_2018)
names(ph_2018)
ph_2018 %>%
mutate(pollinationtype = NA,
pollinationtype=ifelse(grepl("@",Genotype),"self",pollinationtype),
pollinationtype=ifelse(grepl("op",tolower(Genotype)),"open",pollinationtype),
Genotype=gsub("op","",tolower(Genotype)),
Genotype=gsub("@","",tolower(Genotype)),
Genotype = str_squish(Genotype)) %>%
arrange(Genotype) %>%
filter(pollinationtype == "open") %>%
rename(genotype = Genotype,
year = Year) -> ph_2018.b
ph_2018.b %>%
select(genotype, Average.cob.length, Replication, Row) %>%
rename(AverageCobLength = `Average.cob.length`) %>%
rename(row = `Row`)%>%
arrange(genotype) %>%
mutate(year = 2018) %>%
arrange(genotype) ->  cobl_2018
#View(ph_2018.b)
colnames(ph_2018.b)
ph_2018.b %>%
rename(row = Row)
ph_2018.b$meancw <- apply(ph_2018.b[, c("Cob.length.1", "Cob.length.2", "Cob.length.3", "Cob.length.4", "Cob.length.5", "Cob.length.6", "Cob.length.7", "Cob.Length.8")], 1, function(x){mean(x, na.rm=TRUE)})
ph_2018.b$Average.cob.length <- as.numeric(as.character(ph_2018.b$Average.cob.length))
plot(ph_2018.b$Average.cob.length, ph_2018.b$meancw)
idx <- which(round(ph_2018.b$Average.cob.length, 1) != round(ph_2018.b$meancw, 1))
cw[idx,]
#meta data for 2018
fb <- read.csv("../cache/fb2018_meta.csv")
fb$quadrant <- floor(fb$row/1000)
#View(fb)
#cw$row <- gsub("-.*", "", cw$Line.number)
#fb1 <- subset(fb, row %% 2 == 1)
#ph_2018.b$Row <- gsub("-.*", "", cw$Line.number)
fb1 <- subset(fb, row %% 2 == 1)
## remove duplicated rows
idx <- duplicated(ph_2018.b$row)
sub1 <- subset(ph_2018.b, row %in% ph_2018.b[idx,]$row)
cw1 <- subset(ph_2018.b, !(row %in% ph_2018.b[idx,]$row))
fb1cw <- merge(fb1, cw1[, c("row", "meancw")], by="row", all.x=TRUE)
View(fb1cw)
colnames(fb1cw)[colnames(fb1cw) == "pedigree"] <- "Pedigree"
colnames(fb1cw)[colnames(fb1cw) == "genotype"] <- "Genotype"
write.table(fb1cw[, -6], "cache/pheno2018_coblength.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2018_coblength.xlsx")
#install.packages("readxl")
library(tidyverse)
library(readxl)
ph_2018 <- read.csv("../data/phenotyping_2018_semra_all_traits.csv")
#View(ph_2018)
names(ph_2018)
ph_2018 %>%
mutate(pollinationtype = NA,
pollinationtype=ifelse(grepl("@",Genotype),"self",pollinationtype),
pollinationtype=ifelse(grepl("op",tolower(Genotype)),"open",pollinationtype),
Genotype=gsub("op","",tolower(Genotype)),
Genotype=gsub("@","",tolower(Genotype)),
Genotype = str_squish(Genotype)) %>%
arrange(Genotype) %>%
filter(pollinationtype == "open") %>%
rename(genotype = Genotype,
year = Year) -> ph_2018.b
ph_2018.b %>%
select(genotype, Average.cob.length, Replication, Row) %>%
rename(AverageCobLength = `Average.cob.length`) %>%
rename(row = `Row`)%>%
arrange(genotype) %>%
mutate(year = 2018) %>%
arrange(genotype) ->  cobl_2018
# group_by(genotype) %>%
# summarise(meanAvgCob2018 = mean(cobLength2018),
#           sdAvgCob2018 = sd(cobLength2018))
#View(ph_2018.b)
colnames(ph_2018.b)
ph_2018.b %>%
rename(row = Row)
colnames(ph_2018.b)[colnames(ph_2018.b) == "Row"] <- "row"
colnames(ph_2018.b)[colnames(ph_2018.b) == "genotype"] <- "Genotype"
head(ph_2018.b)
unique(ph_2018.b$Genotype)
ph_2018.b$meancw <- apply(ph_2018.b[, c("Cob.length.1", "Cob.length.2", "Cob.length.3", "Cob.length.4", "Cob.length.5", "Cob.length.6", "Cob.length.7", "Cob.Length.8")], 1, function(x){mean(x, na.rm=TRUE)})
ph_2018.b$Average.cob.length <- as.numeric(as.character(ph_2018.b$Average.cob.length))
plot(ph_2018.b$Average.cob.length, ph_2018.b$meancw)
idx <- which(round(ph_2018.b$Average.cob.length, 1) != round(ph_2018.b$meancw, 1))
cw[idx,]
#meta data for 2018
fb <- read.csv("../cache/fb2018_meta.csv")
fb$quadrant <- floor(fb$row/1000)
#View(fb)
#cw$row <- gsub("-.*", "", cw$Line.number)
#fb1 <- subset(fb, row %% 2 == 1)
#ph_2018.b$Row <- gsub("-.*", "", cw$Line.number)
fb1 <- subset(fb, row %% 2 == 1)
## remove duplicated rows
idx <- duplicated(ph_2018.b$row)
sub1 <- subset(ph_2018.b, row %in% ph_2018.b[idx,]$row)
cw1 <- subset(ph_2018.b, !(row %in% ph_2018.b[idx,]$row))
fb1cw <- merge(fb1, cw1[, c("row", "meancw")], by="row", all.x=TRUE)
View(fb1cw)
colnames(fb1cw)[colnames(fb1cw) == "pedigree"] <- "Pedigree"
colnames(fb1cw)[colnames(fb1cw) == "genotype"] <- "Genotype"
write.table(fb1cw[, -6], "cache/pheno2018_coblength.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2018_coblength.xlsx")
fb <- read.csv("../cache/fb2019_meta_replaced_check.csv")
fb$quadrant <- floor(fb$row/1000)
#View(fb)
cw <- read.csv("../data/phenotyping_2019_semra_coblength_raw.csv")
table(cw$Number.of.ears)
#View(cw)
cw$meancw <- apply(cw[, c("Cob.length.1", "Cob.length.2", "Cob.length.3", "Cob.length.4", "Cob.length.5", "Cob.length.6", "Cob.length.7", "Cob.length.8", "Cob.length.9")], 1, function(x){mean(x, na.rm=TRUE)})
#View(cw$meancw)
cw$meancw <- apply(cw[, 3:11], 1, function(x){mean(x, na.rm=TRUE)})
cw$Average.cob.length <- as.numeric(as.character(cw$Average.cob.length))
plot(cw$Average.cob.length, cw$meancw)
cw$row <- gsub("-.*", "", cw$Line.number)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
#install.packages("readxl")
library(tidyverse)
library(readxl)
ph_2018 <- read.csv("../data/phenotyping_2018_semra_all_traits.csv")
#View(ph_2018)
names(ph_2018)
ph_2018 %>%
mutate(pollinationtype = NA,
pollinationtype=ifelse(grepl("@",Genotype),"self",pollinationtype),
pollinationtype=ifelse(grepl("op",tolower(Genotype)),"open",pollinationtype),
Genotype=gsub("op","",tolower(Genotype)),
Genotype=gsub("@","",tolower(Genotype)),
Genotype = str_squish(Genotype)) %>%
arrange(Genotype) %>%
filter(pollinationtype == "open") %>%
rename(genotype = Genotype,
year = Year) -> ph_2018.b
ph_2018.b %>%
select(genotype, Average.cob.length, Replication, Row) %>%
rename(AverageCobLength = `Average.cob.length`) %>%
rename(row = `Row`)%>%
arrange(genotype) %>%
mutate(year = 2018) %>%
arrange(genotype) ->  cobl_2018
# group_by(genotype) %>%
# summarise(meanAvgCob2018 = mean(cobLength2018),
#           sdAvgCob2018 = sd(cobLength2018))
#View(ph_2018.b)
colnames(ph_2018.b)
ph_2018.b %>%
rename(row = Row)
colnames(ph_2018.b)[colnames(ph_2018.b) == "Row"] <- "row"
colnames(ph_2018.b)[colnames(ph_2018.b) == "genotype"] <- "Genotype"
head(ph_2018.b)
unique(ph_2018.b$Genotype)
ph_2018.b$meancw <- apply(ph_2018.b[, c("Cob.length.1", "Cob.length.2", "Cob.length.3", "Cob.length.4", "Cob.length.5", "Cob.length.6", "Cob.length.7", "Cob.Length.8")], 1, function(x){mean(x, na.rm=TRUE)})
ph_2018.b$Average.cob.length <- as.numeric(as.character(ph_2018.b$Average.cob.length))
plot(ph_2018.b$Average.cob.length, ph_2018.b$meancw)
idx <- which(round(ph_2018.b$Average.cob.length, 1) != round(ph_2018.b$meancw, 1))
cw[idx,]
#meta data for 2018
fb <- read.csv("../cache/fb2018_meta.csv")
fb$quadrant <- floor(fb$row/1000)
#View(fb)
#cw$row <- gsub("-.*", "", cw$Line.number)
#fb1 <- subset(fb, row %% 2 == 1)
#ph_2018.b$Row <- gsub("-.*", "", cw$Line.number)
fb1 <- subset(fb, row %% 2 == 1)
## remove duplicated rows
idx <- duplicated(ph_2018.b$row)
sub1 <- subset(ph_2018.b, row %in% ph_2018.b[idx,]$row)
cw1 <- subset(ph_2018.b, !(row %in% ph_2018.b[idx,]$row))
fb1cw <- merge(fb1, cw1[, c("row", "meancw")], by="row", all.x=TRUE)
View(fb1cw)
colnames(fb1cw)[colnames(fb1cw) == "pedigree"] <- "Pedigree"
colnames(fb1cw)[colnames(fb1cw) == "genotype"] <- "Genotype"
write.table(fb1cw[, -6], "cache/pheno2018_coblength.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2018_coblength.xlsx")
fb <- read.csv("cache/fb2019_meta_replaced_check.csv")
fb <- read.csv("../cache/fb2019_meta_replaced_check.csv")
fb$quadrant <- floor(fb$row/1000)
#View(fb)
cw <- read.csv("../data/phenotyping_2019_semra_coblength_raw.csv")
table(cw$Number.of.ears)
#View(cw)
cw$meancw <- apply(cw[, c("Cob.length.1", "Cob.length.2", "Cob.length.3", "Cob.length.4", "Cob.length.5", "Cob.length.6", "Cob.length.7", "Cob.length.8", "Cob.length.9")], 1, function(x){mean(x, na.rm=TRUE)})
#View(cw$meancw)
cw$meancw <- apply(cw[, 3:11], 1, function(x){mean(x, na.rm=TRUE)})
cw$Average.cob.length <- as.numeric(as.character(cw$Average.cob.length))
plot(cw$Average.cob.length, cw$meancw)
cw$row <- gsub("-.*", "", cw$Line.number)
cw$row <- gsub("-.*", "", cw$Row.number)
fb1 <- subset(fb, row %% 2 == 1)
#View(fb1)
## remove duplicated rows
idx <- duplicated(cw$row)
sub1 <- subset(cw, row %in% cw[idx,]$row)
cw1 <- subset(cw, !(row %in% cw[idx,]$row))
dim(cw1)
#View(cw1)
fb1cw <- merge(fb1, cw1[, c("row", "meancw")], by="row", all.x=TRUE)
#View(fb1cw)
# Quality checking
# how many of the non-check plots have no data
nonch <- subset(fb1cw, !(Genotype %in% "Check"))
sum(is.na(nonch$meancw))
nonch_data <- subset(nonch, !is.na(meancw))
t.test(subset(fb1cw, quadrant %in% "1")$meancw, subset(fb1cw, quadrant %in% "2")$meancw, na.rm=TRUE)
nonch_data <- subset(nonch, !is.na(meancw))
t.test(subset(fb1cw, quadrant %in% "1")$meancw, subset(fb1cw, quadrant %in% "2")$meancw, na.rm=TRUE)
t.test(subset(fb1cw, quadrant %in% "3")$meancw, subset(fb1cw, quadrant %in% "4")$meancw, na.rm=TRUE)
cw$row <- gsub("-.*", "", cw$Row.number)
fb1 <- subset(fb, row %% 2 == 1)
#View(fb1)
## remove duplicated rows
idx <- duplicated(cw$row)
sub1 <- subset(cw, row %in% cw[idx,]$row)
cw1 <- subset(cw, !(row %in% cw[idx,]$row))
dim(cw1)
#View(cw1)
fb1cw <- merge(fb1, cw1[, c("row", "meancw")], by="row", all.x=TRUE)
# how many of the non-check plots have no data
nonch <- subset(fb1cw, !(Genotype %in% "Check"))
sum(is.na(nonch$meancw))
nonch_data <- subset(nonch, !is.na(meancw))
t.test(subset(fb1cw, quadrant %in% "1")$meancw, subset(fb1cw, quadrant %in% "2")$meancw, na.rm=TRUE)
View(nonch_data)
cw$meancw <- apply(cw[, c("Cob.length.1", "Cob.length.2", "Cob.length.3", "Cob.length.4", "Cob.length.5", "Cob.length.6", "Cob.length.7", "Cob.length.8", "Cob.length.9")], 1, function(x){mean(x, na.rm=TRUE)})
#View(cw$meancw)
cw$meancw <- apply(cw[, 3:11], 1, function(x){mean(x, na.rm=TRUE)})
cw$Average.cob.length <- as.numeric(as.character(cw$Average.cob.length))
plot(cw$Average.cob.length, cw$meancw)
cw$row <- gsub("-.*", "", cw$Row.number)
fb1 <- subset(fb, row %% 2 == 1)
#View(fb1)
## remove duplicated rows
idx <- duplicated(cw$row)
sub1 <- subset(cw, row %in% cw[idx,]$row)
cw1 <- subset(cw, !(row %in% cw[idx,]$row))
dim(cw1)
#View(cw1)
fb1cw <- merge(fb1, cw1[, c("row", "Average.cob.length")], by="row", all.x=TRUE)
#View(fb1cw)
# Quality checking
# how many of the non-check plots have no data
nonch <- subset(fb1cw, !(Genotype %in% "Check"))
sum(is.na(nonch$Average.cob.length))
nonch_data <- subset(nonch, !is.na(Average.cob.length))
t.test(subset(fb1cw, quadrant %in% "1")$Average.cob.length, subset(fb1cw, quadrant %in% "2")$Average.cob.length, na.rm=TRUE)
t.test(subset(fb1cw, quadrant %in% "3")$Average.cob.length, subset(fb1cw, quadrant %in% "4")$Average.cob.length, na.rm=TRUE)
write.table(fb1cw[, -16], "cache/pheno2019_cl.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2019_cob_length.xlsx")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
#install.packages("readxl")
library(tidyverse)
library(readxl)
ph_2018 <- read.csv("../data/phenotyping_2018_semra_all_traits.csv")
#View(ph_2018)
names(ph_2018)
ph_2018 %>%
mutate(pollinationtype = NA,
pollinationtype=ifelse(grepl("@",Genotype),"self",pollinationtype),
pollinationtype=ifelse(grepl("op",tolower(Genotype)),"open",pollinationtype),
Genotype=gsub("op","",tolower(Genotype)),
Genotype=gsub("@","",tolower(Genotype)),
Genotype = str_squish(Genotype)) %>%
arrange(Genotype) %>%
filter(pollinationtype == "open") %>%
rename(genotype = Genotype,
year = Year) -> ph_2018.b
ph_2018.b %>%
select(genotype, Average.cob.length, Replication, Row) %>%
rename(AverageCobLength = `Average.cob.length`) %>%
rename(row = `Row`)%>%
arrange(genotype) %>%
mutate(year = 2018) %>%
arrange(genotype) ->  cobl_2018
# group_by(genotype) %>%
# summarise(meanAvgCob2018 = mean(cobLength2018),
#           sdAvgCob2018 = sd(cobLength2018))
#View(ph_2018.b)
colnames(ph_2018.b)
ph_2018.b %>%
rename(row = Row)
colnames(ph_2018.b)[colnames(ph_2018.b) == "Row"] <- "row"
colnames(ph_2018.b)[colnames(ph_2018.b) == "genotype"] <- "Genotype"
head(ph_2018.b)
unique(ph_2018.b$Genotype)
ph_2018.b$Weight.of.20.seeds <- as.numeric(as.character(ph_2018.b$Weight.of.20.seeds))
#meta data for 2018
fb <- read.csv("../cache/fb2018_meta.csv")
fb$quadrant <- floor(fb$row/1000)
#View(fb)
#cw$row <- gsub("-.*", "", cw$Line.number)
#fb1 <- subset(fb, row %% 2 == 1)
#ph_2018.b$Row <- gsub("-.*", "", cw$Line.number)
fb1 <- subset(fb, row %% 2 == 1)
## remove duplicated rows
idx <- duplicated(ph_2018.b$row)
sub1 <- subset(ph_2018.b, row %in% ph_2018.b[idx,]$row)
cw1 <- subset(ph_2018.b, !(row %in% ph_2018.b[idx,]$row))
fb1cw <- merge(fb1, cw1[, c("row", "Weight.of.20.seeds")], by="row", all.x=TRUE)
#View(fb1cw)
colnames(fb1cw)[colnames(fb1cw) == "pedigree"] <- "Pedigree"
colnames(fb1cw)[colnames(fb1cw) == "genotype"] <- "Genotype"
write.table(fb1cw[, -6], "cache/pheno2018_20_kernel_weight.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2018_20_kernel_weight.xlsx")
fb <- read.csv("../cache/fb2019_meta_replaced_check.csv")
fb$quadrant <- floor(fb$row/1000)
#View(fb)
cw <- read.csv("../data/phenotyping_2019_semra_cobwidth_raw.csv")
table(cw$Number.of.ears)
View(cw)
cw$Weight.of.20.seeds <- as.numeric(as.character(cw$Weight.of.20.seeds))
cw$row <- gsub("-.*", "", cw$Line.number)
cw$row <- gsub("-.*", "", cw$Row.number)
fb1 <- subset(fb, row %% 2 == 1)
#View(fb1)
## remove duplicated rows
idx <- duplicated(cw$row)
sub1 <- subset(cw, row %in% cw[idx,]$row)
cw1 <- subset(cw, !(row %in% cw[idx,]$row))
dim(cw1)
#View(cw1)
fb1cw <- merge(fb1, cw1[, c("row", "Weight.of.20.seeds")], by="row", all.x=TRUE)
#View(fb1cw)
# Quality checking
# how many of the non-check plots have no data
nonch <- subset(fb1cw, !(Genotype %in% "Check"))
sum(is.na(nonch$Weight.of.20.seeds))
nonch_data <- subset(nonch, !is.na(Weight.of.20.seeds))
t.test(subset(fb1cw, quadrant %in% "1")$Weight.of.20.seeds, subset(fb1cw, quadrant %in% "2")$Weight.of.20.seeds, na.rm=TRUE)
t.test(subset(fb1cw, quadrant %in% "3")$Weight.of.20.seeds, subset(fb1cw, quadrant %in% "4")$Weight.of.20.seeds, na.rm=TRUE)
write.table(fb1cw[, -16], "cache/pheno2019_20_kernel_weight.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2019_20_kernel_weight.xlsx")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
#install.packages("readxl")
library(tidyverse)
library(readxl)
ph_2018 <- read.csv("../data/phenotyping_2018_semra_all_traits.csv")
#View(ph_2018)
names(ph_2018)
ph_2018 %>%
mutate(pollinationtype = NA,
pollinationtype=ifelse(grepl("@",Genotype),"self",pollinationtype),
pollinationtype=ifelse(grepl("op",tolower(Genotype)),"open",pollinationtype),
Genotype=gsub("op","",tolower(Genotype)),
Genotype=gsub("@","",tolower(Genotype)),
Genotype = str_squish(Genotype)) %>%
arrange(Genotype) %>%
filter(pollinationtype == "open") %>%
rename(genotype = Genotype,
year = Year) -> ph_2018.b
ph_2018.b %>%
select(genotype, Average.cob.length, Replication, Row) %>%
rename(AverageCobLength = `Average.cob.length`) %>%
rename(row = `Row`)%>%
arrange(genotype) %>%
mutate(year = 2018) %>%
arrange(genotype) ->  cobl_2018
# group_by(genotype) %>%
# summarise(meanAvgCob2018 = mean(cobLength2018),
#           sdAvgCob2018 = sd(cobLength2018))
#View(ph_2018.b)
colnames(ph_2018.b)
ph_2018.b %>%
rename(row = Row)
colnames(ph_2018.b)[colnames(ph_2018.b) == "Row"] <- "row"
colnames(ph_2018.b)[colnames(ph_2018.b) == "genotype"] <- "Genotype"
head(ph_2018.b)
unique(ph_2018.b$Genotype)
ph_2018.b$meancw <- apply(ph_2018.b[, c("Cob.width.1", "Cob.width.2", "Cob.width.3", "Cob.width.4", "Cob.width.5", "Cob.width.6", "Cob.Width.7", "Cob.width.8")], 1, function(x){mean(x, na.rm=TRUE)})
ph_2018.b$Average.cob.width <- as.numeric(as.character(ph_2018.b$Average.cob.width))
plot(ph_2018.b$Average.cob.width, ph_2018.b$meancw)
idx <- which(round(ph_2018.b$Average.cob.width, 1) != round(ph_2018.b$meancw, 1))
ph_2018.b[idx,]
#meta data for 2018
fb <- read.csv("../cache/fb2018_meta.csv")
fb$quadrant <- floor(fb$row/1000)
View(fb)
#cw$row <- gsub("-.*", "", cw$Line.number)
#fb1 <- subset(fb, row %% 2 == 1)
#ph_2018.b$Row <- gsub("-.*", "", cw$Line.number)
fb1 <- subset(fb, row %% 2 == 1)
## remove duplicated rows
idx <- duplicated(ph_2018.b$row)
sub1 <- subset(ph_2018.b, row %in% ph_2018.b[idx,]$row)
cw1 <- subset(ph_2018.b, !(row %in% ph_2018.b[idx,]$row))
fb1cw <- merge(fb1, cw1[, c("row", "meancw")], by="row", all.x=TRUE)
View(fb1cw)
colnames(fb1cw)[colnames(fb1cw) == "pedigree"] <- "Pedigree"
colnames(fb1cw)[colnames(fb1cw) == "genotype"] <- "Genotype"
write.table(fb1cw, "../cache/pheno2018_cobwidth.csv", sep=",", row.names = FALSE, quote=FALSE)
install.packages("writexl")
library(writexl)
write_xlsx(fb1cw, "../cache/pheno2018_cobwidth.xlsx")
write.table(subset(fb1cw[, -6], nitrogen %in% "+N"), "cache/pheno2018_cobwidth_withN.csv", sep=",", row.names = FALSE, quote=FALSE)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
library(tidyverse)
fb18 <- read.csv("../data/fb2018_JY_282_4plots.csv")
#View(fb18)
fb18$block <- "B1"
fb18[fb18$row > 3000,]$block <- "B2"
fb18$nitrogen <- "+N"
fb18[fb18$row > 2000 & fb18$row < 4000, ]$nitrogen <- "-N"
fb18$sb <- NA
fb18$reminder1 <- fb18$row %% 1000
fb18$reminder2 <- fb18$reminder1 %% 100
fb18[fb18$reminder1 < 300 & fb18$reminder2 <= 48,]$sb <- "sb1"
fb18[fb18$reminder1 < 300 & fb18$reminder2 > 48,]$sb <- "sb2"
fb18[fb18$reminder1 > 300 & fb18$reminder2 <= 48,]$sb <- "sb3"
fb18[fb18$reminder1 > 300 & fb18$reminder2 > 48,]$sb <- "sb4"
table(fb18$sb)
fb18_meta <- read.csv("../cache/fb2018_meta.csv")
View(fb18_meta)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
#install.packages("readxl")
library(tidyverse)
library(readxl)
ph_2018 <- read.csv("../data/phenotyping_2018_semra_all_traits.csv")
#View(ph_2018)
names(ph_2018)
ph_2018 %>%
mutate(pollinationtype = NA,
pollinationtype=ifelse(grepl("@",Genotype),"self",pollinationtype),
pollinationtype=ifelse(grepl("op",tolower(Genotype)),"open",pollinationtype),
Genotype=gsub("op","",tolower(Genotype)),
Genotype=gsub("@","",tolower(Genotype)),
Genotype = str_squish(Genotype)) %>%
arrange(Genotype) %>%
filter(pollinationtype == "open") %>%
rename(genotype = Genotype,
year = Year) -> ph_2018.b
ph_2018.b %>%
select(genotype, Average.cob.length, Replication, Row) %>%
rename(AverageCobLength = `Average.cob.length`) %>%
rename(row = `Row`)%>%
arrange(genotype) %>%
mutate(year = 2018) %>%
arrange(genotype) ->  cobl_2018
# group_by(genotype) %>%
# summarise(meanAvgCob2018 = mean(cobLength2018),
#           sdAvgCob2018 = sd(cobLength2018))
#View(ph_2018.b)
colnames(ph_2018.b)
ph_2018.b %>%
rename(row = Row)
colnames(ph_2018.b)[colnames(ph_2018.b) == "Row"] <- "row"
colnames(ph_2018.b)[colnames(ph_2018.b) == "genotype"] <- "Genotype"
head(ph_2018.b)
unique(ph_2018.b$Genotype)
ph_2018.b$meancw <- apply(ph_2018.b[, c("Cob.width.1", "Cob.width.2", "Cob.width.3", "Cob.width.4", "Cob.width.5", "Cob.width.6", "Cob.Width.7", "Cob.width.8")], 1, function(x){mean(x, na.rm=TRUE)})
ph_2018.b$Average.cob.width <- as.numeric(as.character(ph_2018.b$Average.cob.width))
plot(ph_2018.b$Average.cob.width, ph_2018.b$meancw)
idx <- which(round(ph_2018.b$Average.cob.width, 1) != round(ph_2018.b$meancw, 1))
ph_2018.b[idx,]
#meta data for 2018
fb <- read.csv("../cache/fb2018_meta.csv")
fb$quadrant <- floor(fb$row/1000)
View(fb)
#cw$row <- gsub("-.*", "", cw$Line.number)
#fb1 <- subset(fb, row %% 2 == 1)
#ph_2018.b$Row <- gsub("-.*", "", cw$Line.number)
fb1 <- subset(fb, row %% 2 == 1)
## remove duplicated rows
idx <- duplicated(ph_2018.b$row)
sub1 <- subset(ph_2018.b, row %in% ph_2018.b[idx,]$row)
cw1 <- subset(ph_2018.b, !(row %in% ph_2018.b[idx,]$row))
fb1cw <- merge(fb1, cw1[, c("row", "meancw")], by="row", all.x=TRUE)
View(fb1cw)
colnames(fb1cw)[colnames(fb1cw) == "pedigree"] <- "Pedigree"
colnames(fb1cw)[colnames(fb1cw) == "genotype"] <- "Genotype"
write.table(fb1cw, "../cache/pheno2018_cobwidth.csv", sep=",", row.names = FALSE, quote=FALSE)
install.packages("writexl")
library(writexl)
write_xlsx(fb1cw, "../cache/pheno2018_cobwidth.xlsx")
write.table(subset(fb1cw[, -6], nitrogen %in% "+N"), "cache/pheno2018_cobwidth_withN.csv", sep=",", row.names = FALSE, quote=FALSE)
write.table(fb1cw, "../cache/pheno2018_cobwidth.csv", sep=",", row.names = FALSE, quote=FALSE)
write.table(subset(fb1cw[, -6], nitrogen %in% "+N"), "../cache/pheno2018_cobwidth_withN.csv", sep=",", row.names = FALSE, quote=FALSE)
write.table(subset(fb1cw[, -6], nitrogen %in% "-N"), "../cache/pheno2018_cobwidth_noN.csv", sep=",", row.names = FALSE, quote=FALSE)
