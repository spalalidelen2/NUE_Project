t.test(subset(fb1cw, quadrant %in% "1")$meancw, subset(fb1cw, quadrant %in% "2")$meancw, na.rm=TRUE)
t.test(subset(fb1cw, quadrant %in% "3")$meancw, subset(fb1cw, quadrant %in% "4")$meancw, na.rm=TRUE)
write.table(fb1cw[, -16], "../cache/pheno2019_cob_length.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2019_cob_length.xlsx")
write.table(subset(fb1cw[, -16], nitrogen %in% "+N"), "../cache/pheno2019_cob_length_withN.csv", sep=",", row.names = FALSE, quote=FALSE)
write.table(subset(fb1cw[, -16], nitrogen %in% "-N"), "../cache/pheno2019_cob_length_noN.csv", sep=",", row.names = FALSE, quote=FALSE)
# how many of the non-check plots have no data
nonch <- subset(fb1cw, !(Genotype %in% "Check"))
sum(is.na(nonch$meancw))
nonch_data <- subset(nonch, !is.na(meancw))
t.test(subset(fb1cw, quadrant %in% "1")$meancw, subset(fb1cw, quadrant %in% "2")$meancw, na.rm=TRUE)
t.test(subset(fb1cw, quadrant %in% "3")$meancw, subset(fb1cw, quadrant %in% "4")$meancw, na.rm=TRUE)
library(ggplot2)
fsize=16
p2 <- ggplot(fb1cw, aes(x=meancw, color=as.factor(quadrant))) +
facet_grid(block ~ nitrogen) +
geom_histogram(bins=30) +
#labs(y=NULL, fill="Traits") + theme_bw() +
theme(#axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=fsize, face="bold"),
legend.title = element_text(size=fsize, face="bold"),
legend.text = element_text(size=fsize),
strip.text = element_text(size = fsize, face = "bold")) +
xlab("Cob Lenght") +
ylab("Frequency")
p2
### first, we need to organize both data set. (they need to have the same columns)
coblength_2019_N <- read.csv("../cache/pheno2019_cob_length_withN.csv")
coblength_2018_N <- read.csv("../cache/pheno2018_cob_length_withN.csv")
#View(coblength_2019_N)
#View(coblength_2018_N)
coblength_18_19_N <- rbind(coblength_2018_N, coblength_2019_N)
View(coblength_18_19_N)
write.table(coblength_18_19_N, "../cache/cob_length_2018_2019_N.csv", sep=",", row.names = FALSE, quote=FALSE)
coblength_2018_noN <- read.csv ("../cache/pheno2018_cob_length_noN.csv")
coblength_2019_noN <- read.csv ("../cache/pheno2019_cob_length_noN.csv")
coblength_18_19_noN <- rbind (coblength_2018_noN, coblength_2019_noN)
write.table(coblength_18_19_noN, "../cache/cob_length_2018_2019_noN.csv", sep=",", row.names = FALSE, quote=FALSE)
library(lme4)
#p1 <- read.csv("cache/pheno2019_cw_withN.csv")
get_BLUP(data = coblength_18_19_N, model = meancw ~ (1 | Genotype) + (1 | year) + (1 | block) + (1 | sb) + (1 | spb) + (1
| Genotype:year), which.factor = "Genotype",
outfile = "../cache/BLUP_RESULTS/cob_length_BLUP_2018_2019_withN_lme4.csv")
#df1 <- read.csv("cache/BLUP/CW_BLUP-2019_withN.csv")
nit <- read.csv("../cache/BLUP_RESULTS/cob_length_BLUP_2018_2019_withN_lme4.csv")
#cor.test(df1$BLUPs, df2$value)
#plot(df1$BLUPs, df2$value)
#noN
#p2 <- read.csv("cache/pheno2019_cw_noN.csv")
get_BLUP(data = coblength_18_19_noN, model = meancw ~ (1 | Genotype) + (1 | year) + (1 | block) + (1 | sb) + (1 | spb) + (1
| Genotype:year), which.factor = "Genotype",
outfile = "../cache/BLUP_RESULTS/cob_length_BLUP_2018_2019_noN_lme4.csv")
nonit <- read.csv("../cache/BLUP_RESULTS/cob_length_BLUP_2018_2019_noN_lme4.csv")
#write.table(fb18[, -16:-17], "cache/fb2018_meta.csv", sep=",", row.names = FALSE, quote=FALSE)
#cor.test(df1$value[c(2:215)], df2$value[c(2:215)])
#plot(df1$value[c(2:215)], df2$value[c(2:215)])
hist(nit$value, breaks=25, col="#6495ed", xlab="Cob length in +N in 2018-2019", ylab="freq", main="histogram")
hist(nonit$value, breaks=25, col="#c6e2ff", xlab="Cob length in -N in 2018-2019", ylab="freq", main="histogram")
t.test(nit$value, nonit$value)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir=normalizePath('../../'))
library(readr)
kwh <- read.csv("cache/20_kernel_weight_2018_2019_N.csv.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir=normalizePath('../../'))
kwh <- read.csv("../cache/20_kernel_weight_2018_2019_N.csv.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
kwh <- read.csv("../cache/20_kernel_weight_2018_2019_N.csv.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir=normalizePath('../../'))
kwh <- read.csv("/cache/20_kernel_weight_2018_2019_N.csv")
kwh <- read.csv("cache/20_kernel_weight_2018_2019_N.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir=normalizePath('../../'))
kwh <- read.csv("../cache/20_kernel_weight_2018_2019_N.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
kwh <- read.csv("../cache/20_kernel_weight_2018_2019_N.csv")
kwh <- read.csv("../cache/20_kernel_weight_2018_2019_N.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
library(readr)
kwh <- read.csv("../cache/20_kernel_weight_2018_2019_N.csv")
getwd()
kwh <- read.csv("cache/20_kernel_weight_2018_2019_N.csv")
head(kwh)
View(kwh)
class(kwh$Weight.of.20.seeds)
View(kwh)
head(kwh)
tail(kwh)
dim(kwh)
install.packages("tidyverse")
update.packages('rlang')
install.packages("devtools")
devtools::install_github("jyanglab/g3tools")
library("g3tools")
install.packages("scales")
install.packages("scales")
ls(getNamespace("g3tools"), all.names=FALSE)
options(stringsAsFactors = FALSE)
install.packages("devtools")
install.packages("devtools")
install.packages("Rtools")
library(devtools)
devtools::install_github("jyanglab/g3tools")
devtools::install_github("r-lib/devtools")
ls(getNamespace("g3tools"), all.names=FALSE)
help("get_BLUP")
help("get_H2")
pheno <- kwh
install.packages("Ime4")
library(lme4)
fit <- get_BLUP(data = pheno, model = Average.seed.weight ~ (1|Genotype) + (1|Replication), which.factor = "Genotype", outfile = "test.csv")
fit <- get_BLUP(data = pheno, model = Weight.of.20.seeds ~ (1|Genotype) + (1|Replication), which.factor = "Genotype", outfile = "test.csv")
fit <- get_BLUP(data = pheno, model = Weight.of.20.seeds ~ (1|Genotype) + (1|Rep), which.factor = "Genotype", outfile = "test.csv")
summary(fit)
vg=0.5684
ve=0.7131
H2 = vg/(vg+ve/2)
H2
fit <- get_BLUP(data = pheno, model = Weight.of.20.seeds ~ (1 | Genotype) + (1 | year) + (1 | block) + (1 | sb) + (1 | spb) + (1
fit <- get_BLUP(data = pheno, model = Weight.of.20.seeds ~ (1 | Genotype) + (1 | year) + (1 | block) + (1 | sb) + (1 | spb) + (1
fit <- get_BLUP(data = pheno, model = Weight.of.20.seeds ~ (1 | Genotype) + (1 | year) + (1 | block) + (1 | sb) + (1 | spb) + (1
| Genotype:year), which.factor = "Genotype", outfile = "test.csv")
summary(fit)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
a <- get_BLUP(data = cob_weight_18_19_noN, model = Average.cob.weight ~ (1 | Genotype) + (1 | year) + (1 | block) + (1 | sb) + (1 | spb) + (1| Genotype:year), which.factor = "Genotype",
outfile = "../cache/BLUP_RESULTS/cob_weight_BLUP_2018_2019_noN_lme4.csv")
summary(a)
summary(fit)
H2 = vg/(vg+ve/2)
H2
vg = 0.538006
ve = 0.648557
H2 = vg/(vg+ve/2)
H2
summary(fit)
vg = 0.538006
ve = 0.648557
H2 = vg/(vg+ve/4)
H2 # 0.623931
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
df <- read.csv ("../data/Appendix_2a_Top5_18Sept2013.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
df <- read.csv ("../data/Appendix_2a_Top5_18Sept2013.csv")
df <- read.csv ("/data/Appendix_2a_Top5_18Sept2013.csv")
df <- read.csv ("data/Appendix_2a_Top5_18Sept2013.csv")
df$Latitude <- as.numeric(as.character(df$Latitude))
View(df)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
df <- read.csv ("data/Appendix_2a_Top5_18Sept2013.csv")
df$Latitude <- as.numeric(as.character(df$Latitude))
range(df$Latitude, na.rm = T)
df$Longitude <- as.numeric(as.character(df$Longitude))
range(df$Longitude, na.rm = T)
library(ggmap)
install.packages("ggmap")
library(ggmap)
myloc <- c(-105, -40, 170, 56)
mymap <- get_map(location=myloc, source="stamen", crop=FALSE, color="bw")
ggmap(mymap) +
geom_point(aes(x = Longitude, y = Latitude), data = df,
alpha = .9, size = 1, col="red")
library(plyr)
c <- ddply(df, .(Country.of.origin), nrow)
View(df)
c <- ddply(df, .(StateID), nrow)
c <- ddply(df, .(StateID), nrow)
c <- subset(c, StateID != "")
df2 <- merge(c, df[, c("StateID",  "Latitude", "Longitude")], by="StateID")
df2 <- df2[!duplicated(df2$StateID), ]
mymap <- get_map(location=myloc, source="stamen", crop=FALSE, color="bw")
ggmap(mymap) +
geom_point(aes(x = Longitude, y = Latitude), data = df2,
alpha = .9, size = df2$V1/10, col="red")
head(df)
class(df$Latitude)
library(ggmap)
##lowerleftlon, lowerleftlat, upperrightlon, upperrightlat
myloc <- c(-124, 25, -68, 50)
mymap <- get_map(location=myloc, source="stamen", crop=FALSE, color="bw")
ggmap(mymap) +
geom_point(aes(x = Longitude, y = Latitude), data = df,
alpha = .9, size = 1, col="red")
mymap <- get_map(location=myloc$Top5_Cd, source="stamen", crop=FALSE, color="bw")
mymap <- get_map(location=myloc, source="stamen", crop=FALSE, color="bw")
##lowerleftlon, lowerleftlat, upperrightlon, upperrightlat
myloc <- c(-124, 25, -68, 50)
mymap <- get_map(location=myloc, source="stamen", crop=FALSE, color="bw")
ggmap(mymap) +
geom_point(aes(x = Longitude, y = Latitude), data = df,
alpha = .9, size = 1, col="red")
library(plyr)
c <- ddply(df, .(StateID), nrow)
c <- subset(c, StateID != "")
df2 <- merge(c, df[, c("StateID",  "Latitude", "Longitude")], by="StateID")
df2 <- df2[!duplicated(df2$StateID), ]
mymap <- get_map(location=myloc, source="stamen", crop=FALSE, color="bw")
ggmap(mymap) +
geom_point(aes(x = Longitude, y = Latitude), data = df2,
alpha = .9, size = df2$V1/10, col="red")
library(plyr)
c <- ddply(df, .(StateID), nrow)
c <- subset(c, StateID != "")
df2 <- merge(c, df[, c("StateID",  "Latitude", "Longitude")], by="StateID")
df2 <- df2[!duplicated(df2$StateID), ]
mymap <- get_map(location=myloc, source="stamen", crop=FALSE, color="bw")
ggmap(mymap) +
geom_point(aes(x = Longitude, y = Latitude), data = df2,
alpha = .9, size = df2$V1/10, col="red")
c <- ddply(df, .(StateID), nrow)
head(c)
mymap <- get_map(location=myloc, source="stamen", crop=FALSE, color="bw")
ggmap(mymap) +
geom_point(aes(x = Longitude, y = Latitude), data = df2,
alpha = .9, size = df2$V1/50, col="red")
mymap <- get_map(location=myloc, source="stamen", crop=FALSE, color="Top5_Cd")
library(plyr)
c <- ddply(df, .(StateID), nrow)
head(c)
c <- subset(c, StateID != "")
df2 <- merge(c, df[, c("StateID",  "Latitude", "Longitude")], by="StateID")
df2 <- df2[!duplicated(df2$StateID), ]
mymap <- get_map(location=myloc, source="stamen", crop=FALSE, color="bw")
ggmap(mymap) +
geom_point(aes(x = Longitude, y = Latitude), data = df2,
alpha = .9, size = df2$V1/50, col="red")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
all_blup_data <- read.csv("../cache/BLUP_RESULTS/all_blup_data.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
all_blup_data <- read.csv("../cache/BLUP_RESULTS/all_blup_data.csv")
all_blup_data <- read.csv("/cache/BLUP_RESULTS/all_blup_data.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
all_blup_data <- read.csv("/cache/BLUP_RESULTS/all_blup_data.csv")
all_blup_data <- read.csv("../cache/BLUP_RESULTS/all_blup_data.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
all_blup_data <- read.csv("../cache/BLUP_RESULTS/all_blup_data.csv")
knitr::opts_knit$set(root.dir=normalizePath('../../'))
all_blup_data <- read.csv("../cache/BLUP_RESULTS/all_blup_data.csv")
all_blup_data <- read.csv("cache/BLUP_RESULTS/all_blup_data.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
all_blup_data <- read.csv("cache/BLUP_RESULTS/all_blup_data.csv")
summary(all_blup_data)
s <- read.csv("cache/BLUP_RESULTS/all_blup_data.csv")
#s <- read.csv("cache/s_t37.csv")
s <- s[order(s$Mean, decreasing=FALSE),]
View(s)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
s <- read.csv("cache/BLUP_RESULTS/all_blup_data.csv")
mean(all_blup_data$kwN)
sd(all_blup_data$kwN)
mean(all_blup_data$kwnoN)
sd(all_blup_data$kwnoN)
mean(all_blup_data$cwgN)
sd(all_blup_data$cwgN)
mean(all_blup_data$cwgnoN)
sd(all_blup_data$cwgnoN)
mean(all_blup_data$clnN)
sd(all_blup_data$clnN)
mean(all_blup_data$clnnoN)
sd(all_blup_data$clnnoN)
mean(all_blup_data$cwdN)
sd(all_blup_data$cwdN)
mean(all_blup_data$cwdnoN)
sd(all_blup_data$cwdnoN)
s <- read.csv("data/blup_mean.csv")
summary(s)
library(ggplot2)
#s <- read.csv("cache/s_t37.csv")
s <- s[order(s$Mean, decreasing=FALSE),]
s$trait <- factor(s$trait, levels = s$trait)
p <- ggplot(s, aes(x=Mean, y=trait)) +
geom_point() +
xlab("S") +
ylab("") +
ggtitle("") +
theme_classic() +
labs(color = "") +
#scale_y_continuous(limits = c(-1, 3)) +
#geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme(plot.title = element_text(size=20, face = "bold"),
axis.text=element_text(size=16, face="bold"),
strip.text.x = element_text(size = 16, face = "bold"),
axis.title=element_text(size=18, face="bold"),
#axis.text.x = element_text(angle = 20, hjust=0.6),
legend.position = c(0.8, 0.95),
#axis.text.x = element_text(angle = 20, hjust=0.6),
legend.title = element_text(size=18, face="bold"),
legend.text = element_text(size=18))
p + geom_vline(xintercept = 0)
plot <- ggplot(data=s,aes(x=trait,y=Mean) +
plot <- plot + scale_x_discrete(labels=c("-N","+N")) + #x-labels
labs(title="20 Kernel Weight BLUP Boxplots",
xlab="Nitrogen Application",ylab="BLUP") #title and axis labels
plot <- plot + theme(panel.grid.major = element_blank(),
plot <- ggplot(data=s,aes(x=trait,y=Mean) +
plot <- plot + scale_x_discrete(labels=c("-N","+N")) + #x-labels
labs(title="20 Kernel Weight BLUP Boxplots",
xlab="trait",ylab="Mean") #title and axis labels
plot <- plot + theme(panel.grid.major = element_blank(),
summary(s)
s1 <- gather(s,trait,Mean,c("BLUP_noN","BLUP_N"),factor_key = T)
library(tidyr)
library(ggplot2)
s1 <- gather(s,trait,Mean,c("BLUP_noN","BLUP_N"),factor_key = T)
s1 <- gather(s,trait,Mean,factor_key = T)
plot <- ggplot(data=s,aes(x=trait,y=Mean) +
plot <- plot + scale_x_discrete(labels=c("-N","+N")) + #x-labels
labs(title="20 Kernel Weight BLUP Boxplots",
xlab="trait",ylab="Mean") #title and axis labels
plot <- plot + theme(panel.grid.major = element_blank(),
s1 <- gather(s,trait,Mean,factor_key = T)
s <-s1
plot <- ggplot(data=s,aes(x=trait,y=Mean) +
plot <- plot + scale_x_discrete(labels=c("-N","+N")) + #x-labels
labs(title="20 Kernel Weight BLUP Boxplots",
xlab="trait",ylab="Mean") #title and axis labels
plot <- plot + theme(panel.grid.major = element_blank(),
View(s)
plot <- ggplot(data=s,aes(x=trait,y=Mean) +
plot <- plot + scale_x_discrete(labels=c("-N","+N")) + #x-labels
labs(title="20 Kernel Weight BLUP Boxplots",
xlab="trait",ylab="Mean") #title and axis labels
plot <- plot + theme(panel.grid.major = element_blank(),
#s <- read.csv("cache/s_t37.csv")
s <- s[order(s$Mean, decreasing=FALSE),]
s$trait <- factor(s$trait, levels = s$trait)
s <- read.csv("data/blup_mean.csv")
summary(s)
library(ggplot2)
#s <- read.csv("cache/s_t37.csv")
s <- s[order(s$Mean, decreasing=FALSE),]
s$trait <- factor(s$trait, levels = s$trait)
p <- ggplot(s, aes(x=Mean, y=trait)) +
geom_point() +
xlab("S") +
ylab("") +
ggtitle("") +
theme_classic() +
labs(color = "") +
#scale_y_continuous(limits = c(-1, 3)) +
#geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme(plot.title = element_text(size=20, face = "bold"),
axis.text=element_text(size=16, face="bold"),
strip.text.x = element_text(size = 16, face = "bold"),
axis.title=element_text(size=18, face="bold"),
#axis.text.x = element_text(angle = 20, hjust=0.6),
legend.position = c(0.8, 0.95),
#axis.text.x = element_text(angle = 20, hjust=0.6),
legend.title = element_text(size=18, face="bold"),
legend.text = element_text(size=18))
p + geom_vline(xintercept = 0)
plot <- ggplot(data=s,aes(x=trait,y=Mean) +
plot <- plot + scale_x_discrete(labels=c("-N","+N")) + #x-labels
labs(title="20 Kernel Weight BLUP Boxplots",
xlab="trait",ylab="") #title and axis labels
plot <- plot + theme(panel.grid.major = element_blank(),
plot <- plot + scale_x_discrete(labels=c("-N","+N")) + #x-labels
labs(title="20 Kernel Weight BLUP Boxplots",
xlab="trait, c(kwN,kwnoN)",ylab="Mean") #title and axis labels
plot <- plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.text = element_text(size=13,face="bold"), #for legends
#legend.title = element_text(size=13, face="bold"), #for legends
axis.title.x = element_text(size=18,face="bold"), #format for x-axis
axis.title.y = element_text(size=18,face="bold"), #format for y-axis
axis.text = element_text(size=18), #format for title
plot.margin = unit(c(1,1,1,1),"cm"))#,
plot
library(tidyr)
library(ggplot2)
plot <- ggplot(data=s,aes(x=trait,y=Mean) +
plot <- plot + scale_x_discrete(labels=c("-N","+N")) + #x-labels
labs(title="Semra",
xlab="trait, c(kwN,kwnoN)",ylab="Mean") #title and axis labels
plot <- plot + theme(panel.grid.major = element_blank(),
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
library(tidyr)
library(ggplot2)
#setting names
names(nonit) <-c("Genotype","BLUP_noN")
names(nit) <- c("Genotype","BLUP_N")
#checking if data is read in correctly
head(nonit)
head(nit)
dim(nonit)
dim(nit)
#merging the two data sets. all=T means that we include the genotypes that only have 1 data point.
combined<- merge.data.frame(nonit,nit,by="Genotype",all=T)
View(combined)
combinedlong <- gather(combined,Nitrogen,BLUP,c("BLUP_noN","BLUP_N"),factor_key = T)
View(combinedlong)
s <- read.csv("data/blup_mean.csv")
summary(s)
library(ggplot2)
#s <- read.csv("cache/s_t37.csv")
s <- s[order(s$Mean, decreasing=FALSE),]
s$trait <- factor(s$trait, levels = s$trait)
plot <- ggplot(data=s,aes(x=trait,y=Mean)) +
geom_boxplot(outlier.colour="red",notch=T) #red color for outliers, notch=T just means there is a curve in the box plot. Change to notch=F to get a simple box
#s <- read.csv("cache/s_t37.csv")
s <- s[order(s$Mean, decreasing=FALSE),]
s$trait <- factor(s$trait, levels = s$trait)
p <- ggplot(s, aes(x=Mean, y=trait)) +
geom_point() +
xlab("S") +
ylab("") +
ggtitle("") +
theme_classic() +
labs(color = "") +
scale_y_continuous(limits = c(-1, 3)) +
geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme(plot.title = element_text(size=20, face = "bold"),
axis.text=element_text(size=16, face="bold"),
strip.text.x = element_text(size = 16, face = "bold"),
axis.title=element_text(size=18, face="bold"),
#axis.text.x = element_text(angle = 20, hjust=0.6),
legend.position = c(0.8, 0.95),
#axis.text.x = element_text(angle = 20, hjust=0.6),
legend.title = element_text(size=18, face="bold"),
legend.text = element_text(size=18))
p + geom_vline(xintercept = 0)
#all_blup_data <- read.csv("cache/BLUP_RESULTS/all_blup_data.csv")
#View(all_blup_data)
#mean(all_blup_data$cwdnoN)
#sd(all_blup_data$cwdnoN)
s <- read.csv("data/blup_mean.csv")
summary(s)
library(ggplot2)
#s <- read.csv("cache/s_t37.csv")
s <- s[order(s$Mean, decreasing=FALSE),]
s$trait <- factor(s$trait, levels = s$trait)
p <- ggplot(s, aes(x=Mean, y=trait)) +
geom_point() +
xlab("S") +
ylab("") +
ggtitle("") +
theme_classic() +
labs(color = "") +
#scale_y_continuous(limits = c(-1, 3)) +
#geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme(plot.title = element_text(size=20, face = "bold"),
axis.text=element_text(size=16, face="bold"),
strip.text.x = element_text(size = 16, face = "bold"),
axis.title=element_text(size=18, face="bold"),
#axis.text.x = element_text(angle = 20, hjust=0.6),
legend.position = c(0.8, 0.95),
#axis.text.x = element_text(angle = 20, hjust=0.6),
legend.title = element_text(size=18, face="bold"),
legend.text = element_text(size=18))
p + geom_vline(xintercept = 0)
#all_blup_data <- read.csv("cache/BLUP_RESULTS/all_blup_data.csv")
#View(all_blup_data)
#mean(all_blup_data$cwdnoN)
#sd(all_blup_data$cwdnoN)
s <- read.csv("data/blup_mean.csv")
summary(s)
library(ggplot2)
#s <- read.csv("cache/s_t37.csv")
s <- s[order(s$Mean, decreasing=FALSE),]
s$trait <- factor(s$trait, levels = s$trait)
p <- ggplot(s, aes(x=Mean, y=trait)) +
geom_point() +
xlab("Blup") +
ylab("") +
ggtitle("") +
theme_classic() +
labs(color = "") +
#scale_y_continuous(limits = c(-1, 3)) +
#geom_vline(xintercept=0, linetype="dashed", color = "red") +
theme(plot.title = element_text(size=20, face = "bold"),
axis.text=element_text(size=16, face="bold"),
strip.text.x = element_text(size = 16, face = "bold"),
axis.title=element_text(size=18, face="bold"),
#axis.text.x = element_text(angle = 20, hjust=0.6),
legend.position = c(0.8, 0.95),
#axis.text.x = element_text(angle = 20, hjust=0.6),
legend.title = element_text(size=18, face="bold"),
legend.text = element_text(size=18))
p + geom_vline(xintercept = 0)
plot <- ggplot(data=s,aes(x=Mean,y=trait)) +
geom_boxplot(outlier.colour="red",notch=T) #red color for outliers, notch=T just means there is a curve in the box plot. Change to notch=F to get a simple box
plot <- plot + scale_x_discrete(labels=c("-N","+N")) + #x-labels
labs(title="20 Kernel Weight BLUP Boxplots",
xlab="Nitrogen Application",ylab="BLUP") #title and axis labels
plot <- plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.text = element_text(size=13,face="bold"), #for legends
#legend.title = element_text(size=13, face="bold"), #for legends
axis.title.x = element_text(size=18,face="bold"), #format for x-axis
axis.title.y = element_text(size=18,face="bold"), #format for y-axis
axis.text = element_text(size=18), #format for title
plot.margin = unit(c(1,1,1,1),"cm"))#,
plot
