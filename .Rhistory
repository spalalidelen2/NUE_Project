# remove excess space on x and y axes
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0))
library(ggplot2)
library(ggcorrplot)
mtcars2<- as.numeric(as.character(mtcars))
cor(mtcars)
ggcorrplot(cor(mtcars))
ggcorrplot(cor(mtcars), hc.order = TRUE)
##
cormat <- round(cor(mydata),2)
head(cormat)
library(reshape2)
melted_cormat <- melt(cormat)
head(melted_cormat)
library(ggplot2)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
###
corrplot::corrplot(cor(mtcars))
ggcorrplot::ggcorrplot(cor(mtcars))
library(knitr)
library(tidyverse, warn.conflict=F)
data.frame(mtcars_cor$r) %>% head() %>% kable()
data.frame(mtcars_cor$r) %>% head() %>% kable()
data.frame(mtcars_cor$P) %>% head() %>% kable()
data.frame(mtcars_cor$n) %>% head(n=3) %>% kable()
cors <- function(df) {
# turn all three matrices (r, n, and P into a data frame)
M <- Hmisc::rcorr(as.matrix(df))
# return the three data frames in a list return(Mdf)
Mdf <- map(M, ~data.frame(.x))
}
cors(mtcars) %>% first() %>% head() %>% kable()
cors(mtcars) %>%
map(~rownames_to_column(.x, var="measure1")) %>%
# look at the first element of the list (r)
first() %>%
head() %>%
kable()
cors(mtcars) %>%
map(~rownames_to_column(.x, var="measure1")) %>%
# format each data set (r,P,n) long
map(~pivot_longer(.x, -measure1, "measure2")) %>%
# look at the first element of the list (r)
first() %>%
head() %>%
kable()
cors(mtcars) %>%
map(~rownames_to_column(.x, var="measure1")) %>%
# format each data set (r,P,n) long
map(~pivot_longer(.x, -measure1, "measure2")) %>%
# merge our three list elements by binding the rows
bind_rows(.id = "id") %>%
head() %>%
kable()
cors(mtcars) %>%
map(~rownames_to_column(.x, var="measure1")) %>%
# format each data set (r,P,n) long
map(~pivot_longer(.x, -measure1, "measure2")) %>%
# merge our three list elements by binding the rows
bind_rows(.id = "id") %>%
pivot_wider(names_from = id, values_from = value) %>%
head() %>%
kable()
cors(mtcars) %>%
map(~rownames_to_column(.x, var="measure1")) %>%
# format each data set (r,P,n) long
map(~pivot_longer(.x, -measure1, "measure2")) %>%
# merge our three list elements by binding the rows
bind_rows(.id = "id") %>%
pivot_wider(names_from = id, values_from = value) %>%
mutate(sig_p = ifelse(P < .05, T, F), p_if_sig = ifelse(P <.05, P, NA), r_if_sig = ifelse(r <.05, r, NA)) %>%
head() %>%
kable()
formatted_cors <- function(df){
cors(df) %>%
map(~rownames_to_column(.x, var="measure1")) %>%
map(~pivot_longer(.x, -measure1, "measure2")) %>%
bind_rows(.id = "id") %>%
pivot_wider(names_from = id, values_from = value) %>%
mutate(sig_p = ifelse(P < .05, T, F), p_if_sig = ifelse(P <.05, P, NA), r_if_sig = ifelse(P <.05, r, NA))
}
formatted_cors(mtcars) %>% head() %>% kable()
formatted_cors(mtcars) %>%
ggplot(aes(x = measure1, y = measure2, fill = r)) +
geom_tile()
formatted_cors(mtcars) %>%
ggplot(aes(x = measure1, y = measure2, fill = r)) +
geom_tile() +
labs(x = NULL, y = NULL, fill = "Pearson's\nCorrelation", title="Correlations in Mineral Nutrient Content of Maize") +
# map a red, white and blue color scale to correspond to -1:1 sequential gradient
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits=c(-1,1)) +
theme_classic() +
# remove excess space on x and y axes
scale_x_discrete(expand=c(0,0)) +
scale_y_discrete(expand=c(0,0))
mydata2 <- gather(mydata, key = "Trait", value = "value", "B11", "Na23", "Mg25", "P31", "S34", "K39", "Ca43", "Mn55", "Fe57", "Co59", "Ni60", "Cu65", "Zn66", "As75", "Se82", "Rb85", "Sr88", "Mo98", "Cd111")
mydata_op <- read.csv("../data/mineral results_b97_2020.csv")
mydata_op2 <- gather (mydata_op, key = "Trait", value = "value_op", "B11", "Na23", "Mg25", "P31", "S34", "K39", "Ca43", "Mn55", "Fe57", "Co59", "Ni60", "Cu65", "Zn66", "As75", "Se82", "Rb85", "Sr88", "Mo98", "Cd111")
total <- merge(mydata2, mydata_op2, by = "Trait")
cor.test(total$value, total$value_op)
library("ggpubr")
ggscatter(total, x = "value", y = "value_op", color = "Trait",
add = "reg.line", add.params = list(color = "darkblue"), conf.int = TRUE,
cor.coef = TRUE, cor.method = "pearson",
xlab = "Micronutrient Content of Maize in Publicly Available Data", ylab = "Micronutrient Content of Maize from Test Run")
cd <- read.csv("../data/mineral results_2020.csv")
cd <- read.csv("../data/mineral results_2020.csv")
head(cd)
hist(cd$Cd...111, breaks=50, col="#ee6a50", xlab="Cob Width", ylab="freq", main="histogram")
hist(cd$Cd...111, col="#ee6a50", xlab="Cob Width", ylab="freq", main="histogram")
head(cd)
View(cd)
hist(cd$Cd...111, breaks = 8col="#ee6a50", xlab="Cob Width", ylab="freq", main="histogram")
hist(cd$Cd...111, breaks = 8, col="#ee6a50", xlab="Cob Width", ylab="freq", main="histogram")
hist(cd$Cd...111, breaks = 8, col="Genotype" xlab="Cob Width", ylab="freq", main="histogram")
hist(cd$Cd...111, breaks = 8, col="Genotype", xlab="Cob Width", ylab="freq", main="histogram")
hist(cd$Cd...111, breaks = 8, color="Genotype", xlab="Cob Width", ylab="freq", main="histogram")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
heritability <- read.csv("../data/heritability_all.csv")
p1n <- ggplot(heritability, aes(x=traits, y=heritability, colour = factor(traits), by = "traits", head = TRUE)) +
#facet_grid(. ~ type) +
geom_point(size=12) +
geom_smooth(method='loess') +
theme_bw() +
xlab("Traits") +
ylab("Heritability") +
theme(axis.text=element_text(size=14), axis.title=element_text(size=17)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1)) ##force it to start zero
#install.packages("ggplot2")
#install.packages("tidyverse")
library("ggplot2")
p1n <- ggplot(heritability, aes(x=traits, y=heritability, colour = factor(traits), by = "traits", head = TRUE)) +
#facet_grid(. ~ type) +
geom_point(size=12) +
geom_smooth(method='loess') +
theme_bw() +
xlab("Traits") +
ylab("Heritability") +
theme(axis.text=element_text(size=14), axis.title=element_text(size=17)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1)) ##force it to start zero
p1n
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
all_blup<- read.csv("../cache/BLUP_RESULTS/all_blup_data.csv")
View(all_blup)
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN)
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN)
p <- ggplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN)
library("ggplot2")
p <- ggplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN)
p <- ggplot(all_blup, aes(x=feed, y=weight))
p <- geom_boxplot()
p <- theme_classic()
p <- p + labs(title = "Box plot")
p
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN)
p <- ggplot(all_blup, aes(x=feed, y=weight))
p <- geom_boxplot()
p <- theme_classic()
p <- p + labs(title = "Box plot")
p <- ggplot(all_blup)
p <- geom_boxplot()
p <- theme_classic()
p <- p + labs(title = "Box plot")
p
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN)
p <- ggplot((all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN)
p <- ggplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN)
p <- ggplot(c(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN), aes(x = feed, y= weight)
p <- ggplot(c(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN), aes(x = feed, y= weight))
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN)
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN, main="Radicle Length in salty and nonsalty conditions", names=c("-Salt","+Salt"), col="lightblue")
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN, main="Radicle Length in salty and nonsalty conditions", names=c("-N","+N"), col="lightblue")
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN, main="Radicle Length in salty and nonsalty conditions", col="lightblue")
name <-
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN, main="Radicle Length in salty and nonsalty conditions", col="lightblue", xlab="Traits", ylab="Frequency")
name <-
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN, main="Radicle Length in salty and nonsalty conditions", col="lightblue", xlab="Traits", ylab="Frequency", names = c("kernel weight", "cob length", "cob weight", "cob width"))
name <-
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN, main="Radicle Length in salty and nonsalty conditions", col="lightblue", xlab="Traits", ylab="Frequency", names = c(kw="kernel weight", "cob length", "cob weight", "cob width"))
name <-
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN, main="Radicle Length in salty and nonsalty conditions", col="lightblue", xlab="Traits", ylab="Frequency", names = c("kw=kernel weight", "cob length", "cob weight", "cob width"))
name <-
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN, main="Radicle Length in salty and nonsalty conditions", col="lightblue", xlab="Traits", ylab="Frequency", names = c("kwN=kernel weight", "cob length", "cob weight", "cob width"))
name <-
boxplot(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN, main="Radicle Length in salty and nonsalty conditions", col="lightblue", xlab="Traits", ylab="Frequency", names = c("kwN=kernel weight", "clnN=cob length", "cwgN=cob weight", "cwdN=cob width"))
heritability <- read.csv("../data/heritability_all_copy_copy.csv")
View(heritability)
all <- read.csv("../data/all_traits_data_vertical")
all <- read.csv("../data/all_traits_data_vertical")
all <- read.csv("../data/all_traits_data_vertical.csv")
View(all)
library(ggplot2)
p <- ggplot(data=all, aes(x=traits, y=value, fill=treatment)) +
geom_boxplot(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p + scale_fill_manual(values=c("nitrogen" = "skyblue4","standard"= "skyblue1"))
p <- ggplot(data=all, aes(x=traits, y=value, fill=treatment)) +
geom_boxplot(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p + scale_fill_brewer(palette="Blues")
p + scale_fill_manual(treatment=c("nitrogen" = "skyblue4","standard"= "skyblue1"))
boxplot(BOX, ylim=c(0,30), las=1, col=c("Blue","lightblue","blue","lightblue","blue","lightblue","blue","lightblue"), xlab="Traits", ylab="")
boxplot(all, ylim=c(0,30), las=1, col=c("Blue","lightblue","blue","lightblue","blue","lightblue","blue","lightblue"), xlab="Traits", ylab="")
all <- read.csv("../data/all_traits_data_vertical.csv")
boxplot(all, ylim=c(0,30), las=1, col=c("Blue","lightblue","blue","lightblue","blue","lightblue","blue","lightblue"), xlab="Traits", ylab="")
boxplot(all, ylim=c(0,30), las=1, xlab="Traits", ylab="")
boxplot(all, ylim=c(0,30), las=1, xlab="traits", ylab="")
heritability <- read.csv("../data/heritability_all_copy_copy.csv")
p <- ggplot(data=heritability, aes(x=traits, y=heritability, fill=treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p + scale_fill_manual(values=c("nitrogen" = "skyblue4","standard"= "skyblue1"))
p <- ggplot(data=heritability, aes(x=traits, y=value, fill=treatment)) +
geom_boxplot(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p
all <- read.csv("../data/all_traits_data_vertical.csv")
p <- ggplot(data=heritability, aes(x=traits, y=value, fill=treatment)) +
geom_boxplot(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p
p <- ggplot(data=heritability, aes(x=traits, y="value", fill=treatment)) +
geom_boxplot(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p
p <- ggplot(all, aes(class, hwy))
p + geom_boxplot()
p <- ggplot(all, aes(traits, value))
p + geom_boxplot()
p + geom_boxplot()
`
p <- ggplot(all, aes(traits, value))
p + geom_boxplot()
p
boxplot(all, ylim=c(0,30), las=1, col=c("Blue","lightblue","blue","lightblue","blue","lightblue","blue","lightblue"), xlab="Traits", ylab="")
p <- boxplot(all, ylim=c(0,30), las=1, col=c("Blue","lightblue","blue","lightblue","blue","lightblue","blue","lightblue"), xlab="Traits", ylab="")
p
p <- boxplot(all, ylim=c(0,30), las=1, col=c("Blue","lightblue","blue","lightblue","blue","lightblue","blue","lightblue"), xlab="Traits", ylab=""))
p <- boxplot(all, ylim=c(0,30), las=1, col=c("Blue","lightblue","blue","lightblue","blue","lightblue","blue","lightblue"), xlab="Traits", ylab="")
p
p <- boxplot(all, ylim=c(0,30), las=1, xlab="Traits", ylab="")
p
p <- ggplot(data=all, aes(x=traits, y=value, fill=treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p + scale_fill_manual(values=c("nitrogen" = "skyblue4","standard"= "skyblue1"))
p + scale_fill_brewer(palette="Blues")
p
p <- boxplot(all ~ traits)
p
all <- read.csv("../data/all_traits_data_vertical.csv")
View(all)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
all <- read.csv("../data/all_traits_data_vertical.csv")
all <- read.csv("data/all_traits_data_vertical.csv")
View(all)
p <- boxplot(all ~ traits)
all <- read.csv("data/all_traits_data_vertical.csv")
View(all)
p <- boxplot(all ~ traits)
attach(all)
p <- boxplot(all ~ traits)
p <- boxplot(all ~ value)
all <- read.csv("data/all_traits_data_vertical.csv")
p <- boxplot(all ~ value)
detach(all)
p <- boxplot(all ~ value)
p <- boxplot(all ~ treatment)
library(ggplot2)
p <- ggplot(data=all, aes(x=traits, y=value, fill=treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p
boxplot(all, ylim=c(0,30), las=1, col=c("Blue","lightblue","blue","lightblue","blue","lightblue","blue","lightblue"), xlab="Traits", ylab="")
return((x = min(x, na.rm = TRUE))/max(x, na.rm = TRUE) = min(x, na.rm = TRUE))
return((x = min(x, na.rm = TRUE))/(max(x, na.rm = TRUE) = min(x, na.rm = TRUE))
}
return((x = min(x, na.rm = TRUE))/(max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
}
return((x = min(x, na.rm = TRUE))/(max(x, na.rm = TRUE) - min(x, na.rm = TRUE)))
all_blup<- read.csv("../cache/BLUP_RESULTS/all_blup_data.csv")
library("ggplot2")
p <- ggplot(c(all_blup$kwN, all_blup$kwnoN, all_blup$cwgN, all_blup$cwgnoN, all_blup$clnN, all_blup$clnnoN, all_blup$cwdN, all_blup$cwdnoN), aes(x = feed, y= weight))
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
cd <- read.csv("data/mineral results_2020.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
cd <- read.csv("data/mineral results_2020.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir=normalizePath('../../'))
cd <- read.csv("data/mineral results_2020.csv")
library(readr)
cd <- read.csv("data/mineral results_2020.csv")
cd <- read.csv("../data/mineral results_2020.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
cd <- read.csv("../data/mineral results_2020.csv")
View(cd)
View(mydata2)
View(combinedlong)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
#library(tidyverse)
cd <- read.csv("data/Book3.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
#library(tidyverse)
cd <- read.csv("data/Book3.csv")
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
#library(tidyverse)
cd <- read.csv("data/Book3.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir=normalizePath('../../'))
#library(tidyverse)
cd <- read.csv("data/Book3.csv")
library(ggplot2)
plotc<-ggplot(cd, aes(x=reorder(Color,-Value), y=Value, fill = Color)) + geom_bar(stat = "identity", color = "black") + scale_fill_manual(values = c("dodgerblue3", "green4", "red2")) + theme_classic() + labs(x="Sample", y="RGB Value") + theme(text = element_text(size = 15))
plotc
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir=normalizePath('../../'))
#library(tidyverse)
cd <- read.csv("cache/cd_pheno_geno.csv")
cd <- read.csv("cache/cd_pheno_geno.csv")
dim(cd)
head(cd)
library(ggplot2)
# Basic violin plot
p <- ggplot(cd, aes(x=Genotype, y=Cd111)) +
geom_violin()
p
p + stat_summary(fun.y = mean, geom="point", shape=23, size=2)
## mean and standard deviation
p <- ggplot(cd, aes(x=Genotype, y=Cd111)) +
geom_violin(trim=FALSE)
p + stat_summary(fun.data="mean_sdl", mult=1,
geom="crossbar", width=0.2 )
p + stat_summary(fun.data=mean_sdl, mult=1,
geom="pointrange", color="red")
p + theme_classic()
p<-ggplot(cd, aes(x=Genotype, y=Cd111, color=Genotype)) +
geom_violin(trim=FALSE)
p
dp <- ggplot(cd, aes(x=Genotype, y=Cd111, fill=Genotype)) +
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1, fill="white")+
labs(title="Plot of length  by Genotype",x="Genotype", y = "Cd111")
dp + theme_classic()
dp <- ggplot(cd, aes(x=Allele, y=Cd111, fill=Allele)) +
geom_violin(trim=FALSE)+
geom_boxplot(width=0.1, fill="white") + labs(x="Allele", y="Cd111") +
labs(x="Genotype", y = "Cd111") + theme_classic()
dp + theme(axis.text=element_text(size=15),
axis.title=element_text(size=15))
dim(cd)
head(cd)
View(cd)
cd_allele <- read.csv("data/Cd_genotype_allele.csv")
View(cd_allele)
cd_allele <- read.csv("data/Cd_genotype_allele.csv")
View(cd_allele)
library(ggplot2)
plotc<-ggplot(cd_allele, aes(x=reorder(Genotype,-Cd), y=Cd, fill=Allele)) + geom_bar(stat = "identity") + theme_classic() + labs(x="Genotype", y="Cd111") + theme(text = element_text(size = 30))
plotc
library(ggplot2)
# Basic box plot
grant_pro_vertical <- read.csv("data/grant_pro_vertical.csv")
View(grant_pro_vertical)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
snp_heritability<- read.csv("data/snp_based_heritability_Semra2.csv")
snp_heritability<- read.csv("../data/snp_based_heritability_Semra2.csv")
library(ggplot2)
p <- ggplot(data=snp_based_heritability_Semra2, aes(x=Traits, y=SNP_based_heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) + theme_classic()
p <- ggplot(data=snp_heritability, aes(x=Traits, y=SNP_based_heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) + theme_classic()
p
p <- ggplot(data=snp_heritability, aes(x=Traits, y=SNP_based_heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) + theme_classic() +
scale_fill_brewer()
p
p <- ggplot(data=snp_heritability, aes(x=Traits, y=SNP_based_heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) + theme_classic() +
scale_fill_brewer(direction=-1)
p
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
snp_heritability<- read.csv("../data/snp_based_heritability.csv")
View(snp_heritability)
snp_heritability_hn_ln<-snp_heritability[c(1,2,6,7,11,12,16,17, )]
snp_heritability_hn_ln<-snp_heritability[c(1,2,6,7,11,12,16,17), ]
snp_heritability<- read.csv("../data/snp_based_heritability.csv")
snp_heritability_hn_ln<-snp_heritability[c(1,2,6,7,11,12,16,17), ]
library(ggplot2)
p <- ggplot(data=snp_heritability_hn_ln, aes(x=Traits, y=SNP_based_heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) + theme_classic() +
scale_fill_brewer(direction=-1)
p
p <- ggplot(data=snp_heritability_hn_ln, aes(x=Traits, y=SNP_based_heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p + scale_fill_manual(values=c("nitrogen" = "skyblue4","standard"= "skyblue1"))
p + scale_fill_brewer(palette="Blues")
p <- ggplot(data=snp_heritability_hn_ln, aes(x=Traits, y=SNP_based_heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p + scale_fill_manual(values=c("nitrogen" = "skyblue4","standard"= "skyblue1"))
p + scale_fill_brewer(palette="Blues")
heritability <- read.csv("../data/heritability_all_copy_copy.csv")
View(heritability)
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
p <- ggplot(data=snp_heritability_hn_ln, aes(x=Traits, y=SNP_based_heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
p + scale_fill_brewer(palette="Blues")
p
p + scale_fill_manual(values=c("LN" = "skyblue4","HN"= "skyblue1"))
p + scale_fill_brewer(palette="Blues")
p
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
p
p + scale_fill_brewer(palette="Blues")
p <- ggplot(data=snp_heritability_hn_ln, aes(x=Traits, y=SNP_based_heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
p
p + scale_fill_manual(values=c("LN" = "skyblue4","HN"= "skyblue1"))
p
p + scale_fill_manual(values=c("LN" = "skyblue4","HN"= "skyblue1"))
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
heritability <- read.csv("../data/heritability_all_copy_copy.csv")
View(heritability)
library(ggplot2)
p <- ggplot(data=heritability, aes(x=traits, y=heritability, fill=treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p + scale_fill_manual(values=c("nitrogen" = "skyblue4","standard"= "skyblue1"))
p + scale_fill_brewer(palette="Blues")
heritability <- read.csv("../data/heritability_all_copy_copy.csv")
library(ggplot2)
p <- ggplot(data=heritability, aes(x=traits, y=heritability, fill=treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme_classic()
p + scale_fill_manual(values=c("nitrogen" = "skyblue4","standard"= "skyblue1"))
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
p <- ggplot(data=heritability, aes(x=traits, y=heritability, fill=treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme(axis.text=element_text(size=14), axis.title=element_text(size=17))
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
p <- ggplot(data=heritability, aes(x=traits, y=heritability, fill=treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme(axis.text=element_text(size=14), axis.title=element_text(size=17)) +
theme_classic()
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
p <- ggplot(data=heritability, aes(x=traits, y=heritability, fill=treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme(axis.text=element_text(size=14), axis.title=element_text(size=17))
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
snp_heritability_hn_ln<-snp_heritability[c(1,2,6,7,11,12,16,17), ]
p <- ggplot(data=snp_heritability_hn_ln, aes(x=Traits, y=SNP_based_heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme(axis.text=element_text(size=14), axis.title=element_text(size=17))
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
p <- ggplot(data=heritability, aes(x=Traits, y=Heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme(axis.text=element_text(size=14), axis.title=element_text(size=17))
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
heritability <- read.csv("../data/heritability_all_copy_copy.csv")
p <- ggplot(data=heritability, aes(x=Traits, y=Heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme(axis.text=element_text(size=14), axis.title=element_text(size=17))
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
heritability <- read.csv("../data/heritability_all_copy_copy.csv")
p <- ggplot(data=heritability, aes(x=Traits, y=Heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge())+
scale_fill_brewer(palette="Paired")+
theme(axis.text=element_text(size=14), axis.title=element_text(size=17))
p + scale_fill_manual(values=c("HN" = "skyblue4","LN"= "skyblue1"))
snp_heritability<- read.csv("../data/snp_based_heritability.csv")
p <- ggplot(data=snp_heritability, aes(x=Traits, y=SNP_based_heritability, fill=Treatment)) +
geom_bar(stat="identity", position=position_dodge()) + theme(axis.text=element_text(size=14), axis.title=element_text(size=17)) +
scale_fill_brewer(direction=-1)
p
