kernel_weight_2019_N <- read.csv("../cache/pheno2019_20_kernel_weight_withN.csv")
kernel_weight_2018_N <- read.csv("../cache/pheno2018_20_kernel_weight_withN.csv")
kernel_weight_18_19_N <- rbind(kernel_weight_2018_N, kernel_weight_2019_N)
write.table(kernel_weight_18_19_N, "../cache/20_kernel_weight_2018_2019_N.csv", sep=",", row.names = FALSE, quote=FALSE)
kernel_weight_2018_noN <- read.csv ("../cache/pheno2018_20_kernel_weight_noN.csv")
kernel_weight_2019_noN <- read.csv ("../cache/pheno2019_20_kernel_weight_noN.csv")
kernel_weight_18_19_noN <- rbind (kernel_weight_2018_noN, kernel_weight_2019_noN)
write.table(coblength_18_19_noN, "../cache/20_kernel_weight_2018_2019_noN.csv", sep=",", row.names = FALSE, quote=FALSE)
get_BLUP(data = kernel_weight_18_19_N , model = Weight.of.20.seeds ~ (1 | Genotype)  + (1 | year) + (1 | block) + (1 | sb) + (1 | spb) + (1| Genotype:year), which.factor = "Genotype",
outfile = "../cache/BLUP_RESULTS/20_kernel_weight_BLUP_2018_2019_withN_lme4.csv")
#df1 <- read.csv("cache/BLUP/CW_BLUP-2019_withN.csv")
nit <- read.csv("../cache/BLUP_RESULTS/20_kernel_weight_BLUP_2018_2019_withN_lme4.csv")
get_BLUP(data = kernel_weight_18_19_noN, model = Weight.of.20.seeds ~ (1 | Genotype) + (1 | year) + (1 | block) + (1 | sb) + (1 | spb) + (1| Genotype:year), which.factor = "Genotype",
outfile = "../cache/BLUP_RESULTS/20_kernel_weight_BLUP_2018_2019_noN_lme4.csv")
nonit <- read.csv("../cache/BLUP_RESULTS/20_kernel_weight_BLUP_2018_2019_noN_lme4.csv")
hist(nit$value, breaks=25, col="#6495ed", xlab="20 kernel weight in +N in 2018-2019", ylab="freq", main="histogram")
hist(nonit$value, breaks=25, col="#c6e2ff", xlab="20 kernel weight in -N in 2018-2019", ylab="freq", main="histogram")
t.test(nit$value, nonit$value)
library(tidyr)
library(ggplot2)
#setting names
names(nonit) <-c("Genotype","BLUP_noN")
names(nit) <- c("Genotype","BLUP_N")
#checking if data is read in correctly
head(nonit)
head(nit)
dim(nonit)
dim(nit)
#merging the two data sets. all=T means that we include the genotypes that only have 1 data point.
combined<- merge.data.frame(nonit,nit,by="Genotype",all=T)
combinedlong <- gather(combined,Nitrogen,BLUP,c("BLUP_noN","BLUP_N"),factor_key = T)
plot <- ggplot(data=combinedlong,aes(x=Nitrogen,y=BLUP)) +
geom_boxplot(outlier.colour="red",notch=T) #red color for outliers, notch=T just means there is a curve in the box plot. Change to notch=F to get a simple box
plot <- plot + scale_x_discrete(labels=c("-N","+N")) + #x-labels
labs(title="20 Kernel Weight BLUP Boxplots",
xlab="Nitrogen Application",ylab="BLUP") #title and axis labels
plot <- plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.text = element_text(size=13,face="bold"), #for legends
#legend.title = element_text(size=13, face="bold"), #for legends
axis.title.x = element_text(size=18,face="bold"), #format for x-axis
axis.title.y = element_text(size=18,face="bold"), #format for y-axis
axis.text = element_text(size=18), #format for title
plot.margin = unit(c(1,1,1,1),"cm"))#,
plot
kwN <- read.csv("../cache/BLUP_RESULTS/20_kernel_weight_BLUP_2018_2019_withN_lme4.csv")
kwnoN <- read.csv("../cache/BLUP_RESULTS/20_kernel_weight_BLUP_2018_2019_noN_lme4.csv")
cwgN <- read.csv("../cache/BLUP_RESULTS/cob_weight_BLUP_2018_2019_withN_lme4.csv")
cwgnoN <- read.csv("../cache/BLUP_RESULTS/cob_weight_BLUP_2018_2019_noN_lme4.csv")
clnN <- read.csv("../cache/BLUP_RESULTS/cob_length_BLUP_2018_2019_withN_lme4.csv")
clnnoN <- read.csv("../cache/BLUP_RESULTS/cob_length_BLUP_2018_2019_noN_lme4.csv")
cwdN <- read.csv("../cache/BLUP_RESULTS/CobWidth_BLUP_2018_2019_noN_lme4.csv")
cwdnoN <- read.csv("../cache/BLUP_RESULTS/CobWidth_BLUP_2018_2019_withN_lme4.csv")
all_blup_data <- cbind (kwN$value, kwnoN$value, cwgN$value, cwgnoN$value, clnN$value, clnnoN$value, cwdN$value, cwdnoN$value)
View(all_blup_data)
View(kwN)
all_blup_data <- cbind (kwN$value, kwnoN$value, cwgN$value, cwgnoN$value, clnN$value, clnnoN$value, cwdN$value, cwdnoN$value)
write.table(all_blup_data, "../cache/BLUP_RESULTS/all_blup_data.csv", sep=",", row.names = FALSE, quote=FALSE)
all_blup_data <- read.csv("../cache/BLUP_RESULTS/all_blup_data.csv")
summary(all_blup_data)
library(caret)
install.packages("caret")
library(caret)
library("caret")
preproc1 <- preProcess(all_blup_data[,c(1:4,6)], method=c("center", "scale"))
install.packages("caret", dependencies = c("Depends", "Suggests"))
library("caret")
install.packages("ggplot2))
install.packages("ggplot2""))
install.packages("ggplot2"))
install.packages("ggplot2")
install.packages("ggplot2")
library("caret")
install.packages("recipes")
library("caret")
library(caret)
library("ggplot2")
library(caret)
install.packages("recipes")
library("recipes")
install.packages("lattice")
install.packages("lattice")
library(caret)
install.packages("caret",
repos = "http://cran.r-project.org",
dependencies = c("Depends", "Imports", "Suggests"))
data_scaled <- as.data.frame(scale(all_blup_data[,c(1:4,6)]))
summary(data_scaled$kwN)
summary(data_scaled$kwnoN)
summary(data_scaled$cwN)
summary(data_scaled$cwgN)
view(data_scaled)
plot <- ggplot(data=data_scaled,aes(x=Nitrogen,y=BLUP)) +
geom_boxplot(outlier.colour="red",notch=T) #red color for outliers, notch=T just means there is a curve in the box plot. Change to notch=F to get a simple box
plot <- plot + scale_x_discrete(labels=c("-N","+N")) + #x-labels
labs(title="20 Kernel Weight BLUP Boxplots",
xlab="Nitrogen Application",ylab="BLUP") #title and axis labels
plot <- plot + theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
#legend.text = element_text(size=13,face="bold"), #for legends
#legend.title = element_text(size=13, face="bold"), #for legends
axis.title.x = element_text(size=18,face="bold"), #format for x-axis
axis.title.y = element_text(size=18,face="bold"), #format for y-axis
axis.text = element_text(size=18), #format for title
plot.margin = unit(c(1,1,1,1),"cm"))#,
plot
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
#install.packages("readxl")
library(tidyverse)
library(readxl)
ph_2018 <- read.csv("../data/phenotyping_2018_semra_all_traits.csv")
#View(ph_2018)
names(ph_2018)
ph_2018 %>%
mutate(pollinationtype = NA,
pollinationtype=ifelse(grepl("@",Genotype),"self",pollinationtype),
pollinationtype=ifelse(grepl("op",tolower(Genotype)),"open",pollinationtype),
Genotype=gsub("op","",tolower(Genotype)),
Genotype=gsub("@","",tolower(Genotype)),
Genotype = str_squish(Genotype)) %>%
arrange(Genotype) %>%
filter(pollinationtype == "open") %>%
rename(genotype = Genotype,
year = Year) -> ph_2018.b
ph_2018.b %>%
select(genotype, Average.cob.length, Replication, Row) %>%
rename(AverageCobLength = `Average.cob.length`) %>%
rename(row = `Row`)%>%
arrange(genotype) %>%
mutate(year = 2018) %>%
arrange(genotype) ->  cobl_2018
# group_by(genotype) %>%
# summarise(meanAvgCob2018 = mean(cobLength2018),
#           sdAvgCob2018 = sd(cobLength2018))
#View(ph_2018.b)
colnames(ph_2018.b)
ph_2018.b %>%
rename(row = Row)
colnames(ph_2018.b)[colnames(ph_2018.b) == "Row"] <- "row"
colnames(ph_2018.b)[colnames(ph_2018.b) == "genotype"] <- "Genotype"
head(ph_2018.b)
unique(ph_2018.b$Genotype)
ph_2018.b$Average.cob.weight <- as.numeric(as.character(ph_2018.b$Average.cob.weight))
#meta data for 2018
fb <- read.csv("../cache/fb2018_meta.csv")
fb$quadrant <- floor(fb$row/1000)
#View(fb)
#cw$row <- gsub("-.*", "", cw$Line.number)
#fb1 <- subset(fb, row %% 2 == 1)
#ph_2018.b$Row <- gsub("-.*", "", cw$Line.number)
fb1 <- subset(fb, row %% 2 == 1)
## remove duplicated rows
idx <- duplicated(ph_2018.b$row)
sub1 <- subset(ph_2018.b, row %in% ph_2018.b[idx,]$row)
cw1 <- subset(ph_2018.b, !(row %in% ph_2018.b[idx,]$row))
fb1cw <- merge(fb1, cw1[, c("row", "Average.cob.weight")], by="row", all.x=TRUE)
#View(fb1cw)
colnames(fb1cw)[colnames(fb1cw) == "pedigree"] <- "Pedigree"
colnames(fb1cw)[colnames(fb1cw) == "genotype"] <- "Genotype"
write.table(fb1cw[, -6], "../cache/pheno2018_cob_weight.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2018_cob_weight.xlsx")
write.table(subset(fb1cw[, -6], nitrogen %in% "+N"), "../cache/pheno2018_cob_weight_withN.csv", sep=",", row.names = FALSE, quote=FALSE)
write.table(subset(fb1cw[, -6], nitrogen %in% "-N"), "../cache/pheno2018_cob_weight_noN.csv", sep=",", row.names = FALSE, quote=FALSE)
# how many of the non-check plots have no data
nonch <- subset(fb1cw, !(Genotype %in% "Check"))
sum(is.na(nonch$Average.cob.weight))
nonch_data <- subset(nonch, !is.na(Average.cob.weight))
t.test(subset(fb1cw, quadrant %in% "1")$Average.cob.weight, subset(fb1cw, quadrant %in% "2")$Average.cob.weight, na.rm=TRUE)
t.test(subset(fb1cw, quadrant %in% "3")$Average.cob.weight, subset(fb1cw, quadrant %in% "4")$Average.cob.weight, na.rm=TRUE)
library(ggplot2)
fsize=16
p1 <- ggplot(fb1cw, aes(x=Average.cob.weight, color=as.factor(quadrant))) +
facet_grid(block ~ nitrogen) +
geom_histogram(bins=30) +
#labs(y=NULL, fill="Traits") + theme_bw() +
theme(#axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=fsize, face="bold"),
legend.title = element_text(size=fsize, face="bold"),
legend.text = element_text(size=fsize),
strip.text = element_text(size = fsize, face = "bold")) +
xlab("Average.cob.weight") +
ylab("Frequency")
p1
fb <- read.csv("../cache/fb2019_meta_replaced_check.csv")
fb$quadrant <- floor(fb$row/1000)
#View(fb)
cw <- read.csv("../data/phenotyping_2019_semra_cobwidth_raw.csv")
table(cw$Number.of.ears)
View(cw)
cw$Average.cob.weight <- as.numeric(as.character(cw$Average.cob.weight))
cw$row <- gsub("-.*", "", cw$Row.number)
fb1 <- subset(fb, row %% 2 == 1)
#View(fb1)
## remove duplicated rows
idx <- duplicated(cw$row)
sub1 <- subset(cw, row %in% cw[idx,]$row)
cw1 <- subset(cw, !(row %in% cw[idx,]$row))
dim(cw1)
#View(cw1)
fb1cw <- merge(fb1, cw1[, c("row", "Average.cob.weight")], by="row", all.x=TRUE)
#View(fb1cw)
# Quality checking
# how many of the non-check plots have no data
nonch <- subset(fb1cw, !(Genotype %in% "Check"))
sum(is.na(nonch$Average.cob.weight))
nonch_data <- subset(nonch, !is.na(Average.cob.weight))
t.test(subset(fb1cw, quadrant %in% "1")$Average.cob.weight, subset(fb1cw, quadrant %in% "2")$Average.cob.weight, na.rm=TRUE)
t.test(subset(fb1cw, quadrant %in% "3")$Average.cob.weight, subset(fb1cw, quadrant %in% "4")$Average.cob.weight, na.rm=TRUE)
write.table(fb1cw[, -16], "../cache/pheno2019_cob_weight.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2019_cob_weight.xlsx")
write.table(subset(fb1cw[, -16], nitrogen %in% "+N"), "../cache/pheno2019_cob_weight_withN.csv", sep=",", row.names = FALSE, quote=FALSE)
write.table(subset(fb1cw[, -16], nitrogen %in% "-N"), "../cache/pheno2019_cob_weight_noN.csv", sep=",", row.names = FALSE, quote=FALSE)
# how many of the non-check plots have no data
nonch <- subset(fb1cw, !(Genotype %in% "Check"))
sum(is.na(nonch$Average.cob.weight))
nonch_data <- subset(nonch, !is.na(Average.cob.weight))
t.test(subset(fb1cw, quadrant %in% "1")$Average.cob.weight, subset(fb1cw, quadrant %in% "2")$Average.cob.weight, na.rm=TRUE)
t.test(subset(fb1cw, quadrant %in% "3")$Average.cob.weight, subset(fb1cw, quadrant %in% "4")$Average.cob.weight, na.rm=TRUE)
library(ggplot2)
fsize=16
p2 <- ggplot(fb1cw, aes(x=Average.cob.weight, color=as.factor(quadrant))) +
facet_grid(block ~ nitrogen) +
geom_histogram(bins=30) +
#labs(y=NULL, fill="Traits") + theme_bw() +
theme(#axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=fsize, face="bold"),
legend.title = element_text(size=fsize, face="bold"),
legend.text = element_text(size=fsize),
strip.text = element_text(size = fsize, face = "bold")) +
xlab("Average.cob.weight") +
ylab("Frequency")
p2
### first, we need to organize both data set. (they need to have the same columns)
cob_weight_2019_N <- read.csv("../cache/pheno2019_cob_weight_withN.csv")
cob_weight_2018_N <- read.csv("../cache/pheno2018_cob_weight_withN.csv")
#View(coblength_2019_N)
#View(coblength_2018_N)
cob_weight_18_19_N <- rbind(cob_weight_2018_N, cob_weight_2019_N)
#View(cobwidth_18_19)
write.table(cob_weight_18_19_N, "../cache/cob_weight_2018_2019_N.csv", sep=",", row.names = FALSE, quote=FALSE)
cob_weight_2018_noN <- read.csv ("../cache/pheno2018_cob_weight_noN.csv")
cob_weight_2019_noN <- read.csv ("../cache/pheno2019_cob_weight_noN.csv")
cob_weight_18_19_noN <- rbind (cob_weight_2018_noN, cob_weight_2019_noN)
write.table(cob_weight_18_19_noN, "../cache/cob_weight_2018_2019_noN.csv", sep=",", row.names = FALSE, quote=FALSE)
library(lme4)
#p1 <- read.csv("cache/pheno2019_cw_withN.csv")
get_BLUP(data = cob_weight_18_19_N, model = Average.cob.weight ~ (1 | Genotype) + (1 | year) + (1 | block) + (1 | sb) + (1 | spb) +
(1| Genotype:year), which.factor = "Genotype",
outfile = "../cache/BLUP_RESULTS/cob_weight_BLUP_2018_2019_withN_lme4.csv")
#df1 <- read.csv("cache/BLUP/CW_BLUP-2019_withN.csv")
nit <- read.csv("../cache/BLUP_RESULTS/cob_weight_BLUP_2018_2019_withN_lme4.csv")
#cor.test(df1$BLUPs, df2$value)
#plot(df1$BLUPs, df2$value)
#noN
#p2 <- read.csv("cache/pheno2019_cw_noN.csv")
get_BLUP(data = cob_weight_18_19_noN, model = Average.cob.weight ~ (1 | Genotype) + (1 | year) + (1 | block) + (1 | sb) + (1 | spb) + (1| Genotype:year), which.factor = "Genotype",
outfile = "../cache/BLUP_RESULTS/cob_weight_BLUP_2018_2019_noN_lme4.csv")
nonit <- read.csv("../cache/BLUP_RESULTS/cob_weight_BLUP_2018_2019_noN_lme4.csv")
#write.table(fb18[, -16:-17], "cache/fb2018_meta.csv", sep=",", row.names = FALSE, quote=FALSE)
#cor.test(df1$value[c(2:215)], df2$value[c(2:215)])
#plot(df1$value[c(2:215)], df2$value[c(2:215)])
t.test(nit$value, nonit$value, alternative="two.sided", var.equal=FALSE)
hist(nit$value, breaks=25, col="#6495ed", xlab="cob weight in +N in 2018-2019", ylab="freq", main="histogram")
hist(nonit$value, breaks=25, col="#c6e2ff", xlab="cob weight in -N in 2018-2019", ylab="freq", main="histogram")
t.test(nit$value, df2$value)
dim(df2)
t.test(nit$value, nonit$value, alternative="two.sided", var.equal=FALSE)
hist(nit$value, breaks=25, col="#6495ed", xlab="cob weight in +N in 2018-2019", ylab="freq", main="histogram")
hist(nonit$value, breaks=25, col="#c6e2ff", xlab="cob weight in -N in 2018-2019", ylab="freq", main="histogram")
t.test(nit$value, nonit$value)
dim(df2)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
#install.packages("readxl")
library(tidyverse)
library(readxl)
ph_2018 <- read.csv("../data/phenotyping_2018_semra_all_traits.csv")
#View(ph_2018)
names(ph_2018)
ph_2018 %>%
mutate(pollinationtype = NA,
pollinationtype=ifelse(grepl("@",Genotype),"self",pollinationtype),
pollinationtype=ifelse(grepl("op",tolower(Genotype)),"open",pollinationtype),
Genotype=gsub("op","",tolower(Genotype)),
Genotype=gsub("@","",tolower(Genotype)),
Genotype = str_squish(Genotype)) %>%
arrange(Genotype) %>%
filter(pollinationtype == "open") %>%
rename(genotype = Genotype,
year = Year) -> ph_2018.b
ph_2018.b %>%
select(genotype, Average.cob.length, Replication, Row) %>%
rename(AverageCobLength = `Average.cob.length`) %>%
rename(row = `Row`)%>%
arrange(genotype) %>%
mutate(year = 2018) %>%
arrange(genotype) ->  cobl_2018
# group_by(genotype) %>%
# summarise(meanAvgCob2018 = mean(cobLength2018),
#           sdAvgCob2018 = sd(cobLength2018))
#View(ph_2018.b)
colnames(ph_2018.b)
ph_2018.b %>%
rename(row = Row)
colnames(ph_2018.b)[colnames(ph_2018.b) == "Row"] <- "row"
colnames(ph_2018.b)[colnames(ph_2018.b) == "genotype"] <- "Genotype"
head(ph_2018.b)
unique(ph_2018.b$Genotype)
ph_2018.b$meancw <- apply(ph_2018.b[, c("Cob.length.1", "Cob.length.2", "Cob.length.3", "Cob.length.4", "Cob.length.5", "Cob.length.6", "Cob.length.7", "Cob.Length.8")], 1, function(x){mean(x, na.rm=TRUE)})
ph_2018.b$Average.cob.length <- as.numeric(as.character(ph_2018.b$Average.cob.length))
plot(ph_2018.b$Average.cob.length, ph_2018.b$meancw)
idx <- which(round(ph_2018.b$Average.cob.length, 1) != round(ph_2018.b$meancw, 1))
cw[idx,]
#meta data for 2018
fb <- read.csv("../cache/fb2018_meta.csv")
fb$quadrant <- floor(fb$row/1000)
#View(fb)
#cw$row <- gsub("-.*", "", cw$Line.number)
#fb1 <- subset(fb, row %% 2 == 1)
#ph_2018.b$Row <- gsub("-.*", "", cw$Line.number)
fb1 <- subset(fb, row %% 2 == 1)
## remove duplicated rows
idx <- duplicated(ph_2018.b$row)
sub1 <- subset(ph_2018.b, row %in% ph_2018.b[idx,]$row)
cw1 <- subset(ph_2018.b, !(row %in% ph_2018.b[idx,]$row))
fb1cw <- merge(fb1, cw1[, c("row", "meancw")], by="row", all.x=TRUE)
View(fb1cw)
colnames(fb1cw)[colnames(fb1cw) == "pedigree"] <- "Pedigree"
colnames(fb1cw)[colnames(fb1cw) == "genotype"] <- "Genotype"
write.table(fb1cw[, -6], "../cache/pheno2018_coblength.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2018_cob_length.xlsx")
write.table(subset(fb1cw[, -6], nitrogen %in% "+N"), "../cache/pheno2018_cob_length_withN.csv", sep=",", row.names = FALSE, quote=FALSE)
write.table(subset(fb1cw[, -6], nitrogen %in% "-N"), "../cache/pheno2018_cob_length_noN.csv", sep=",", row.names = FALSE, quote=FALSE)
knitr::opts_chunk$set(echo = TRUE)
#knitr::opts_knit$set(root.dir=normalizePath('../../'))
#install.packages("readxl")
library(tidyverse)
library(readxl)
ph_2018 <- read.csv("../data/phenotyping_2018_semra_all_traits.csv")
#View(ph_2018)
names(ph_2018)
ph_2018 %>%
mutate(pollinationtype = NA,
pollinationtype=ifelse(grepl("@",Genotype),"self",pollinationtype),
pollinationtype=ifelse(grepl("op",tolower(Genotype)),"open",pollinationtype),
Genotype=gsub("op","",tolower(Genotype)),
Genotype=gsub("@","",tolower(Genotype)),
Genotype = str_squish(Genotype)) %>%
arrange(Genotype) %>%
filter(pollinationtype == "open") %>%
rename(genotype = Genotype,
year = Year) -> ph_2018.b
ph_2018.b %>%
select(genotype, Average.cob.length, Replication, Row) %>%
rename(AverageCobLength = `Average.cob.length`) %>%
rename(row = `Row`)%>%
arrange(genotype) %>%
mutate(year = 2018) %>%
arrange(genotype) ->  cobl_2018
# group_by(genotype) %>%
# summarise(meanAvgCob2018 = mean(cobLength2018),
#           sdAvgCob2018 = sd(cobLength2018))
#View(ph_2018.b)
colnames(ph_2018.b)
ph_2018.b %>%
rename(row = Row)
colnames(ph_2018.b)[colnames(ph_2018.b) == "Row"] <- "row"
colnames(ph_2018.b)[colnames(ph_2018.b) == "genotype"] <- "Genotype"
head(ph_2018.b)
unique(ph_2018.b$Genotype)
ph_2018.b$meancw <- apply(ph_2018.b[, c("Cob.length.1", "Cob.length.2", "Cob.length.3", "Cob.length.4", "Cob.length.5", "Cob.length.6", "Cob.length.7", "Cob.Length.8")], 1, function(x){mean(x, na.rm=TRUE)})
ph_2018.b$Average.cob.length <- as.numeric(as.character(ph_2018.b$Average.cob.length))
plot(ph_2018.b$Average.cob.length, ph_2018.b$meancw)
idx <- which(round(ph_2018.b$Average.cob.length, 1) != round(ph_2018.b$meancw, 1))
cw[idx,]
#meta data for 2018
fb <- read.csv("../cache/fb2018_meta.csv")
fb$quadrant <- floor(fb$row/1000)
#View(fb)
#cw$row <- gsub("-.*", "", cw$Line.number)
#fb1 <- subset(fb, row %% 2 == 1)
#ph_2018.b$Row <- gsub("-.*", "", cw$Line.number)
fb1 <- subset(fb, row %% 2 == 1)
## remove duplicated rows
idx <- duplicated(ph_2018.b$row)
sub1 <- subset(ph_2018.b, row %in% ph_2018.b[idx,]$row)
cw1 <- subset(ph_2018.b, !(row %in% ph_2018.b[idx,]$row))
fb1cw <- merge(fb1, cw1[, c("row", "meancw")], by="row", all.x=TRUE)
View(fb1cw)
colnames(fb1cw)[colnames(fb1cw) == "pedigree"] <- "Pedigree"
colnames(fb1cw)[colnames(fb1cw) == "genotype"] <- "Genotype"
write.table(fb1cw[, -6], "../cache/pheno2018_coblength.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2018_cob_length.xlsx")
write.table(subset(fb1cw[, -6], nitrogen %in% "+N"), "../cache/pheno2018_cob_length_withN.csv", sep=",", row.names = FALSE, quote=FALSE)
write.table(subset(fb1cw[, -6], nitrogen %in% "-N"), "../cache/pheno2018_cob_length_noN.csv", sep=",", row.names = FALSE, quote=FALSE)
# how many of the non-check plots have no data
nonch <- subset(fb1cw, !(Genotype %in% "Check"))
sum(is.na(nonch$meancw))
nonch_data <- subset(nonch, !is.na(meancw))
t.test(subset(fb1cw, quadrant %in% "1")$meancw, subset(fb1cw, quadrant %in% "2")$meancw, na.rm=TRUE)
t.test(subset(fb1cw, quadrant %in% "3")$meancw, subset(fb1cw, quadrant %in% "4")$meancw, na.rm=TRUE)
library(ggplot2)
fsize=16
p1 <- ggplot(fb1cw, aes(x=meancw, color=as.factor(quadrant))) +
facet_grid(block ~ nitrogen) +
geom_histogram(bins=30) +
#labs(y=NULL, fill="Traits") + theme_bw() +
theme(#axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=fsize, face="bold"),
legend.title = element_text(size=fsize, face="bold"),
legend.text = element_text(size=fsize),
strip.text = element_text(size = fsize, face = "bold")) +
xlab("Cob Length") +
ylab("Frequency")
p1
fb <- read.csv("../cache/fb2019_meta_replaced_check.csv")
fb$quadrant <- floor(fb$row/1000)
#View(fb)
cw <- read.csv("../data/phenotyping_2019_semra_coblength_raw.csv")
table(cw$Number.of.ears)
View(cw)
cw$meancw <- apply(cw[, c("Cob.length.1", "Cob.length.2", "Cob.length.3", "Cob.length.4", "Cob.length.5", "Cob.length.6", "Cob.length.7", "Cob.length.8", "Cob.length.9")], 1, function(x){mean(x, na.rm=TRUE)})
#View(cw$meancw)
cw$meancw <- apply(cw[, 7:15], 1, function(x){mean(x, na.rm=TRUE)})
cw$Average.cob.length <- as.numeric(as.character(cw$Average.cob.length))
plot(cw$Average.cob.length, cw$meancw)
idx <- which(round(cw$Average.cob.length, 1) != round(cw$meancw, 1))
cw[idx,]
cw$row <- gsub("-.*", "", cw$Row.number)
fb1 <- subset(fb, row %% 2 == 1)
#View(fb1)
## remove duplicated rows
idx <- duplicated(cw$row)
sub1 <- subset(cw, row %in% cw[idx,]$row)
cw1 <- subset(cw, !(row %in% cw[idx,]$row))
dim(cw1)
#View(cw1)
fb1cw <- merge(fb1, cw1[, c("row", "meancw")], by="row", all.x=TRUE)
#View(fb1cw)
# Quality checking
# how many of the non-check plots have no data
nonch <- subset(fb1cw, !(Genotype %in% "Check"))
sum(is.na(nonch$meancw))
nonch_data <- subset(nonch, !is.na(meancw))
t.test(subset(fb1cw, quadrant %in% "1")$meancw, subset(fb1cw, quadrant %in% "2")$meancw, na.rm=TRUE)
t.test(subset(fb1cw, quadrant %in% "3")$meancw, subset(fb1cw, quadrant %in% "4")$meancw, na.rm=TRUE)
write.table(fb1cw[, -16], "../cache/pheno2019_cob_length.csv", sep=",", row.names = FALSE, quote=FALSE)
write_xlsx(fb1cw, "../cache/pheno2019_cob_length.xlsx")
write.table(subset(fb1cw[, -16], nitrogen %in% "+N"), "../cache/pheno2019_cob_length_withN.csv", sep=",", row.names = FALSE, quote=FALSE)
write.table(subset(fb1cw[, -16], nitrogen %in% "-N"), "../cache/pheno2019_cob_length_noN.csv", sep=",", row.names = FALSE, quote=FALSE)
# how many of the non-check plots have no data
nonch <- subset(fb1cw, !(Genotype %in% "Check"))
sum(is.na(nonch$meancw))
nonch_data <- subset(nonch, !is.na(meancw))
t.test(subset(fb1cw, quadrant %in% "1")$meancw, subset(fb1cw, quadrant %in% "2")$meancw, na.rm=TRUE)
t.test(subset(fb1cw, quadrant %in% "3")$meancw, subset(fb1cw, quadrant %in% "4")$meancw, na.rm=TRUE)
library(ggplot2)
fsize=16
p2 <- ggplot(fb1cw, aes(x=meancw, color=as.factor(quadrant))) +
facet_grid(block ~ nitrogen) +
geom_histogram(bins=30) +
#labs(y=NULL, fill="Traits") + theme_bw() +
theme(#axis.text.x=element_blank(), axis.ticks.x=element_blank(),
axis.text=element_text(size=12),
axis.title=element_text(size=fsize, face="bold"),
legend.title = element_text(size=fsize, face="bold"),
legend.text = element_text(size=fsize),
strip.text = element_text(size = fsize, face = "bold")) +
xlab("Cob Lenght") +
ylab("Frequency")
p2
### first, we need to organize both data set. (they need to have the same columns)
coblength_2019_N <- read.csv("../cache/pheno2019_cob_length_withN.csv")
coblength_2018_N <- read.csv("../cache/pheno2018_cob_length_withN.csv")
#View(coblength_2019_N)
#View(coblength_2018_N)
coblength_18_19_N <- rbind(coblength_2018_N, coblength_2019_N)
View(coblength_18_19_N)
write.table(coblength_18_19_N, "../cache/cob_length_2018_2019_N.csv", sep=",", row.names = FALSE, quote=FALSE)
coblength_2018_noN <- read.csv ("../cache/pheno2018_cob_length_noN.csv")
coblength_2019_noN <- read.csv ("../cache/pheno2019_cob_length_noN.csv")
coblength_18_19_noN <- rbind (coblength_2018_noN, coblength_2019_noN)
write.table(coblength_18_19_noN, "../cache/cob_length_2018_2019_noN.csv", sep=",", row.names = FALSE, quote=FALSE)
library(lme4)
#p1 <- read.csv("cache/pheno2019_cw_withN.csv")
get_BLUP(data = coblength_18_19_N, model = meancw ~ (1 | Genotype) + (1 | year) + (1 | block) + (1 | sb) + (1 | spb) + (1
| Genotype:year), which.factor = "Genotype",
outfile = "../cache/BLUP_RESULTS/cob_length_BLUP_2018_2019_withN_lme4.csv")
#df1 <- read.csv("cache/BLUP/CW_BLUP-2019_withN.csv")
nit <- read.csv("../cache/BLUP_RESULTS/cob_length_BLUP_2018_2019_withN_lme4.csv")
#cor.test(df1$BLUPs, df2$value)
#plot(df1$BLUPs, df2$value)
#noN
#p2 <- read.csv("cache/pheno2019_cw_noN.csv")
get_BLUP(data = coblength_18_19_noN, model = meancw ~ (1 | Genotype) + (1 | year) + (1 | block) + (1 | sb) + (1 | spb) + (1
| Genotype:year), which.factor = "Genotype",
outfile = "../cache/BLUP_RESULTS/cob_length_BLUP_2018_2019_noN_lme4.csv")
nonit <- read.csv("../cache/BLUP_RESULTS/cob_length_BLUP_2018_2019_noN_lme4.csv")
#write.table(fb18[, -16:-17], "cache/fb2018_meta.csv", sep=",", row.names = FALSE, quote=FALSE)
#cor.test(df1$value[c(2:215)], df2$value[c(2:215)])
#plot(df1$value[c(2:215)], df2$value[c(2:215)])
hist(nit$value, breaks=25, col="#6495ed", xlab="Cob length in +N in 2018-2019", ylab="freq", main="histogram")
hist(nonit$value, breaks=25, col="#c6e2ff", xlab="Cob length in -N in 2018-2019", ylab="freq", main="histogram")
t.test(nit$value, nonit$value)
